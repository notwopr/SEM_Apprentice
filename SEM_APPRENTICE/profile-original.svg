<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1242" onload="init(evt)" viewBox="0 0 1200 1242" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1242" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">C:\Program Files\Python311\Scripts\py-spy.exe record -o profile.svg -- python.exe SEM_Apprentice.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1231.00"> </text><svg id="frames" x="10" width="1180" total_samples="1885"><g><title>&lt;module&gt; (numpy\core\__init__.py:23) (2 samples, 0.11%)</title><rect x="0.1061%" y="580" width="0.1061%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="2"/><text x="0.3561%" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1234) (2 samples, 0.11%)</title><rect x="0.1061%" y="596" width="0.1061%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="2"/><text x="0.3561%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.11%)</title><rect x="0.1061%" y="612" width="0.1061%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="2"/><text x="0.3561%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (2 samples, 0.11%)</title><rect x="0.1061%" y="628" width="0.1061%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="2"/><text x="0.3561%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (2 samples, 0.11%)</title><rect x="0.1061%" y="644" width="0.1061%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="2"/><text x="0.3561%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.11%)</title><rect x="0.1061%" y="660" width="0.1061%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="2"/><text x="0.3561%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.11%)</title><rect x="0.1061%" y="676" width="0.1061%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="2"/><text x="0.3561%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.11%)</title><rect x="0.1061%" y="692" width="0.1061%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="2"/><text x="0.3561%" y="702.50"></text></g><g><title>&lt;module&gt; (numpy\core\multiarray.py:10) (2 samples, 0.11%)</title><rect x="0.1061%" y="708" width="0.1061%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="2"/><text x="0.3561%" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1234) (2 samples, 0.11%)</title><rect x="0.1061%" y="724" width="0.1061%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="2"/><text x="0.3561%" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.11%)</title><rect x="0.1061%" y="740" width="0.1061%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="2"/><text x="0.3561%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (2 samples, 0.11%)</title><rect x="0.1061%" y="756" width="0.1061%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="2"/><text x="0.3561%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (2 samples, 0.11%)</title><rect x="0.1061%" y="772" width="0.1061%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="2"/><text x="0.3561%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.11%)</title><rect x="0.1061%" y="788" width="0.1061%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="2"/><text x="0.3561%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.11%)</title><rect x="0.1061%" y="804" width="0.1061%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="2"/><text x="0.3561%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.11%)</title><rect x="0.1061%" y="820" width="0.1061%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="2"/><text x="0.3561%" y="830.50"></text></g><g><title>&lt;module&gt; (numpy\core\overrides.py:8) (2 samples, 0.11%)</title><rect x="0.1061%" y="836" width="0.1061%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="2"/><text x="0.3561%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (2 samples, 0.11%)</title><rect x="0.1061%" y="852" width="0.1061%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="2"/><text x="0.3561%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1128) (2 samples, 0.11%)</title><rect x="0.1061%" y="868" width="0.1061%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="2"/><text x="0.3561%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.11%)</title><rect x="0.1061%" y="884" width="0.1061%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="2"/><text x="0.3561%" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (2 samples, 0.11%)</title><rect x="0.1061%" y="900" width="0.1061%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="2"/><text x="0.3561%" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (2 samples, 0.11%)</title><rect x="0.1061%" y="916" width="0.1061%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="2"/><text x="0.3561%" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.11%)</title><rect x="0.1061%" y="932" width="0.1061%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="2"/><text x="0.3561%" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.11%)</title><rect x="0.1061%" y="948" width="0.1061%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="2"/><text x="0.3561%" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.11%)</title><rect x="0.1061%" y="964" width="0.1061%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="2"/><text x="0.3561%" y="974.50"></text></g><g><title>&lt;module&gt; (numpy\compat\__init__.py:12) (2 samples, 0.11%)</title><rect x="0.1061%" y="980" width="0.1061%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="2"/><text x="0.3561%" y="990.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1234) (2 samples, 0.11%)</title><rect x="0.1061%" y="996" width="0.1061%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.11%)</title><rect x="0.1061%" y="1012" width="0.1061%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (2 samples, 0.11%)</title><rect x="0.1061%" y="1028" width="0.1061%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (2 samples, 0.11%)</title><rect x="0.1061%" y="1044" width="0.1061%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.11%)</title><rect x="0.1061%" y="1060" width="0.1061%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.11%)</title><rect x="0.1061%" y="1076" width="0.1061%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.11%)</title><rect x="0.1061%" y="1092" width="0.1061%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1102.50"></text></g><g><title>&lt;module&gt; (numpy\compat\py3k.py:26) (2 samples, 0.11%)</title><rect x="0.1061%" y="1108" width="0.1061%" height="15" fill="rgb(254,191,54)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (2 samples, 0.11%)</title><rect x="0.1061%" y="1124" width="0.1061%" height="15" fill="rgb(241,83,37)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (2 samples, 0.11%)</title><rect x="0.1061%" y="1140" width="0.1061%" height="15" fill="rgb(233,36,39)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.11%)</title><rect x="0.1061%" y="1156" width="0.1061%" height="15" fill="rgb(226,3,54)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.11%)</title><rect x="0.1061%" y="1172" width="0.1061%" height="15" fill="rgb(245,192,40)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.11%)</title><rect x="0.1061%" y="1188" width="0.1061%" height="15" fill="rgb(238,167,29)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1198.50"></text></g><g><title>&lt;module&gt; (pickle.py:407) (2 samples, 0.11%)</title><rect x="0.1061%" y="1204" width="0.1061%" height="15" fill="rgb(232,182,51)" fg:x="2" fg:w="2"/><text x="0.3561%" y="1214.50"></text></g><g><title>&lt;module&gt; (numpy\__init__.py:141) (4 samples, 0.21%)</title><rect x="0.1061%" y="452" width="0.2122%" height="15" fill="rgb(231,60,39)" fg:x="2" fg:w="4"/><text x="0.3561%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1234) (4 samples, 0.21%)</title><rect x="0.1061%" y="468" width="0.2122%" height="15" fill="rgb(208,69,12)" fg:x="2" fg:w="4"/><text x="0.3561%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.21%)</title><rect x="0.1061%" y="484" width="0.2122%" height="15" fill="rgb(235,93,37)" fg:x="2" fg:w="4"/><text x="0.3561%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (4 samples, 0.21%)</title><rect x="0.1061%" y="500" width="0.2122%" height="15" fill="rgb(213,116,39)" fg:x="2" fg:w="4"/><text x="0.3561%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (4 samples, 0.21%)</title><rect x="0.1061%" y="516" width="0.2122%" height="15" fill="rgb(222,207,29)" fg:x="2" fg:w="4"/><text x="0.3561%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (4 samples, 0.21%)</title><rect x="0.1061%" y="532" width="0.2122%" height="15" fill="rgb(206,96,30)" fg:x="2" fg:w="4"/><text x="0.3561%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (4 samples, 0.21%)</title><rect x="0.1061%" y="548" width="0.2122%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="4"/><text x="0.3561%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.21%)</title><rect x="0.1061%" y="564" width="0.2122%" height="15" fill="rgb(250,191,14)" fg:x="2" fg:w="4"/><text x="0.3561%" y="574.50"></text></g><g><title>&lt;module&gt; (pyscreeze\__init__.py:45) (7 samples, 0.37%)</title><rect x="0.1061%" y="260" width="0.3714%" height="15" fill="rgb(239,60,40)" fg:x="2" fg:w="7"/><text x="0.3561%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (7 samples, 0.37%)</title><rect x="0.1061%" y="276" width="0.3714%" height="15" fill="rgb(206,27,48)" fg:x="2" fg:w="7"/><text x="0.3561%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (7 samples, 0.37%)</title><rect x="0.1061%" y="292" width="0.3714%" height="15" fill="rgb(225,35,8)" fg:x="2" fg:w="7"/><text x="0.3561%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (7 samples, 0.37%)</title><rect x="0.1061%" y="308" width="0.3714%" height="15" fill="rgb(250,213,24)" fg:x="2" fg:w="7"/><text x="0.3561%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (7 samples, 0.37%)</title><rect x="0.1061%" y="324" width="0.3714%" height="15" fill="rgb(247,123,22)" fg:x="2" fg:w="7"/><text x="0.3561%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.37%)</title><rect x="0.1061%" y="340" width="0.3714%" height="15" fill="rgb(231,138,38)" fg:x="2" fg:w="7"/><text x="0.3561%" y="350.50"></text></g><g><title>&lt;module&gt; (cv2\__init__.py:11) (7 samples, 0.37%)</title><rect x="0.1061%" y="356" width="0.3714%" height="15" fill="rgb(231,145,46)" fg:x="2" fg:w="7"/><text x="0.3561%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (7 samples, 0.37%)</title><rect x="0.1061%" y="372" width="0.3714%" height="15" fill="rgb(251,118,11)" fg:x="2" fg:w="7"/><text x="0.3561%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (7 samples, 0.37%)</title><rect x="0.1061%" y="388" width="0.3714%" height="15" fill="rgb(217,147,25)" fg:x="2" fg:w="7"/><text x="0.3561%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (7 samples, 0.37%)</title><rect x="0.1061%" y="404" width="0.3714%" height="15" fill="rgb(247,81,37)" fg:x="2" fg:w="7"/><text x="0.3561%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (7 samples, 0.37%)</title><rect x="0.1061%" y="420" width="0.3714%" height="15" fill="rgb(209,12,38)" fg:x="2" fg:w="7"/><text x="0.3561%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (7 samples, 0.37%)</title><rect x="0.1061%" y="436" width="0.3714%" height="15" fill="rgb(227,1,9)" fg:x="2" fg:w="7"/><text x="0.3561%" y="446.50"></text></g><g><title>&lt;module&gt; (SEM_Apprentice.py:15) (12 samples, 0.64%)</title><rect x="0.0000%" y="68" width="0.6366%" height="15" fill="rgb(248,47,43)" fg:x="0" fg:w="12"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (12 samples, 0.64%)</title><rect x="0.0000%" y="84" width="0.6366%" height="15" fill="rgb(221,10,30)" fg:x="0" fg:w="12"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (12 samples, 0.64%)</title><rect x="0.0000%" y="100" width="0.6366%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="12"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (12 samples, 0.64%)</title><rect x="0.0000%" y="116" width="0.6366%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="12"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (12 samples, 0.64%)</title><rect x="0.0000%" y="132" width="0.6366%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="12"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.64%)</title><rect x="0.0000%" y="148" width="0.6366%" height="15" fill="rgb(247,98,35)" fg:x="0" fg:w="12"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (pyautogui\__init__.py:183) (11 samples, 0.58%)</title><rect x="0.0531%" y="164" width="0.5836%" height="15" fill="rgb(247,138,52)" fg:x="1" fg:w="11"/><text x="0.3031%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (11 samples, 0.58%)</title><rect x="0.0531%" y="180" width="0.5836%" height="15" fill="rgb(213,79,30)" fg:x="1" fg:w="11"/><text x="0.3031%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (11 samples, 0.58%)</title><rect x="0.0531%" y="196" width="0.5836%" height="15" fill="rgb(246,177,23)" fg:x="1" fg:w="11"/><text x="0.3031%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (11 samples, 0.58%)</title><rect x="0.0531%" y="212" width="0.5836%" height="15" fill="rgb(230,62,27)" fg:x="1" fg:w="11"/><text x="0.3031%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (11 samples, 0.58%)</title><rect x="0.0531%" y="228" width="0.5836%" height="15" fill="rgb(216,154,8)" fg:x="1" fg:w="11"/><text x="0.3031%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (11 samples, 0.58%)</title><rect x="0.0531%" y="244" width="0.5836%" height="15" fill="rgb(244,35,45)" fg:x="1" fg:w="11"/><text x="0.3031%" y="254.50"></text></g><g><title>&lt;module&gt; (pyscreeze\__init__.py:74) (3 samples, 0.16%)</title><rect x="0.4775%" y="260" width="0.1592%" height="15" fill="rgb(251,115,12)" fg:x="9" fg:w="3"/><text x="0.7275%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (3 samples, 0.16%)</title><rect x="0.4775%" y="276" width="0.1592%" height="15" fill="rgb(240,54,50)" fg:x="9" fg:w="3"/><text x="0.7275%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (3 samples, 0.16%)</title><rect x="0.4775%" y="292" width="0.1592%" height="15" fill="rgb(233,84,52)" fg:x="9" fg:w="3"/><text x="0.7275%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.16%)</title><rect x="0.4775%" y="308" width="0.1592%" height="15" fill="rgb(207,117,47)" fg:x="9" fg:w="3"/><text x="0.7275%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (3 samples, 0.16%)</title><rect x="0.4775%" y="324" width="0.1592%" height="15" fill="rgb(249,43,39)" fg:x="9" fg:w="3"/><text x="0.7275%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.16%)</title><rect x="0.4775%" y="340" width="0.1592%" height="15" fill="rgb(209,38,44)" fg:x="9" fg:w="3"/><text x="0.7275%" y="350.50"></text></g><g><title>&lt;module&gt; (pygetwindow\__init__.py:335) (2 samples, 0.11%)</title><rect x="0.5305%" y="356" width="0.1061%" height="15" fill="rgb(236,212,23)" fg:x="10" fg:w="2"/><text x="0.7805%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (2 samples, 0.11%)</title><rect x="0.5305%" y="372" width="0.1061%" height="15" fill="rgb(242,79,21)" fg:x="10" fg:w="2"/><text x="0.7805%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (2 samples, 0.11%)</title><rect x="0.5305%" y="388" width="0.1061%" height="15" fill="rgb(211,96,35)" fg:x="10" fg:w="2"/><text x="0.7805%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.11%)</title><rect x="0.5305%" y="404" width="0.1061%" height="15" fill="rgb(253,215,40)" fg:x="10" fg:w="2"/><text x="0.7805%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.11%)</title><rect x="0.5305%" y="420" width="0.1061%" height="15" fill="rgb(211,81,21)" fg:x="10" fg:w="2"/><text x="0.7805%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.11%)</title><rect x="0.5305%" y="436" width="0.1061%" height="15" fill="rgb(208,190,38)" fg:x="10" fg:w="2"/><text x="0.7805%" y="446.50"></text></g><g><title>yesno (SEM_Apprentice.py:169) (5 samples, 0.27%)</title><rect x="0.6366%" y="84" width="0.2653%" height="15" fill="rgb(235,213,38)" fg:x="12" fg:w="5"/><text x="0.8866%" y="94.50"></text></g><g><title>__init__ (tkinter\__init__.py:2326) (5 samples, 0.27%)</title><rect x="0.6366%" y="100" width="0.2653%" height="15" fill="rgb(237,122,38)" fg:x="12" fg:w="5"/><text x="0.8866%" y="110.50"></text></g><g><title>yesno (SEM_Apprentice.py:173) (9 samples, 0.48%)</title><rect x="0.9019%" y="84" width="0.4775%" height="15" fill="rgb(244,218,35)" fg:x="17" fg:w="9"/><text x="1.1519%" y="94.50"></text></g><g><title>askyesno (tkinter\messagebox.py:114) (9 samples, 0.48%)</title><rect x="0.9019%" y="100" width="0.4775%" height="15" fill="rgb(240,68,47)" fg:x="17" fg:w="9"/><text x="1.1519%" y="110.50"></text></g><g><title>_show (tkinter\messagebox.py:76) (9 samples, 0.48%)</title><rect x="0.9019%" y="116" width="0.4775%" height="15" fill="rgb(210,16,53)" fg:x="17" fg:w="9"/><text x="1.1519%" y="126.50"></text></g><g><title>show (tkinter\commondialog.py:45) (9 samples, 0.48%)</title><rect x="0.9019%" y="132" width="0.4775%" height="15" fill="rgb(235,124,12)" fg:x="17" fg:w="9"/><text x="1.1519%" y="142.50"></text></g><g><title>&lt;module&gt; (SEM_Apprentice.py:198) (15 samples, 0.80%)</title><rect x="0.6366%" y="68" width="0.7958%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="15"/><text x="0.8866%" y="78.50"></text></g><g><title>_handler (pynput\_util\win32.py:388) (2 samples, 0.11%)</title><rect x="2.3342%" y="180" width="0.1061%" height="15" fill="rgb(250,166,2)" fg:x="44" fg:w="2"/><text x="2.5842%" y="190.50"></text></g><g><title>_handle (pynput\mouse\_win32.py:201) (3 samples, 0.16%)</title><rect x="2.4934%" y="196" width="0.1592%" height="15" fill="rgb(242,216,29)" fg:x="47" fg:w="3"/><text x="2.7434%" y="206.50"></text></g><g><title>cast (ctypes\__init__.py:512) (2 samples, 0.11%)</title><rect x="2.5464%" y="212" width="0.1061%" height="15" fill="rgb(230,116,27)" fg:x="48" fg:w="2"/><text x="2.7964%" y="222.50"></text></g><g><title>_log (logging\__init__.py:1622) (2 samples, 0.11%)</title><rect x="2.7056%" y="276" width="0.1061%" height="15" fill="rgb(228,99,48)" fg:x="51" fg:w="2"/><text x="2.9556%" y="286.50"></text></g><g><title>findCaller (logging\__init__.py:1582) (2 samples, 0.11%)</title><rect x="2.7056%" y="292" width="0.1061%" height="15" fill="rgb(253,11,6)" fg:x="51" fg:w="2"/><text x="2.9556%" y="302.50"></text></g><g><title>_log (logging\__init__.py:1632) (3 samples, 0.16%)</title><rect x="2.8117%" y="276" width="0.1592%" height="15" fill="rgb(247,143,39)" fg:x="53" fg:w="3"/><text x="3.0617%" y="286.50"></text></g><g><title>makeRecord (logging\__init__.py:1601) (3 samples, 0.16%)</title><rect x="2.8117%" y="292" width="0.1592%" height="15" fill="rgb(236,97,10)" fg:x="53" fg:w="3"/><text x="3.0617%" y="302.50"></text></g><g><title>formatTime (logging\__init__.py:624) (4 samples, 0.21%)</title><rect x="3.0769%" y="420" width="0.2122%" height="15" fill="rgb(233,208,19)" fg:x="58" fg:w="4"/><text x="3.3269%" y="430.50"></text></g><g><title>format (SEM_Apprentice.py:185) (6 samples, 0.32%)</title><rect x="3.0769%" y="388" width="0.3183%" height="15" fill="rgb(216,164,2)" fg:x="58" fg:w="6"/><text x="3.3269%" y="398.50"></text></g><g><title>format (logging\__init__.py:689) (6 samples, 0.32%)</title><rect x="3.0769%" y="404" width="0.3183%" height="15" fill="rgb(220,129,5)" fg:x="58" fg:w="6"/><text x="3.3269%" y="414.50"></text></g><g><title>formatTime (logging\__init__.py:628) (2 samples, 0.11%)</title><rect x="3.2891%" y="420" width="0.1061%" height="15" fill="rgb(242,17,10)" fg:x="62" fg:w="2"/><text x="3.5391%" y="430.50"></text></g><g><title>format (SEM_Apprentice.py:186) (3 samples, 0.16%)</title><rect x="3.3952%" y="388" width="0.1592%" height="15" fill="rgb(242,107,0)" fg:x="64" fg:w="3"/><text x="3.6452%" y="398.50"></text></g><g><title>formatTime (logging\__init__.py:628) (2 samples, 0.11%)</title><rect x="3.4483%" y="404" width="0.1061%" height="15" fill="rgb(251,28,31)" fg:x="65" fg:w="2"/><text x="3.6983%" y="414.50"></text></g><g><title>emit (logging\__init__.py:1110) (11 samples, 0.58%)</title><rect x="3.0769%" y="356" width="0.5836%" height="15" fill="rgb(233,223,10)" fg:x="58" fg:w="11"/><text x="3.3269%" y="366.50"></text></g><g><title>format (logging\__init__.py:953) (11 samples, 0.58%)</title><rect x="3.0769%" y="372" width="0.5836%" height="15" fill="rgb(215,21,27)" fg:x="58" fg:w="11"/><text x="3.3269%" y="382.50"></text></g><g><title>format (SEM_Apprentice.py:187) (2 samples, 0.11%)</title><rect x="3.5544%" y="388" width="0.1061%" height="15" fill="rgb(232,23,21)" fg:x="67" fg:w="2"/><text x="3.8044%" y="398.50"></text></g><g><title>emit (logging\__init__.py:1113) (2 samples, 0.11%)</title><rect x="3.6605%" y="356" width="0.1061%" height="15" fill="rgb(244,5,23)" fg:x="69" fg:w="2"/><text x="3.9105%" y="366.50"></text></g><g><title>_handle (pynput\mouse\_win32.py:208) (27 samples, 1.43%)</title><rect x="2.7056%" y="196" width="1.4324%" height="15" fill="rgb(226,81,46)" fg:x="51" fg:w="27"/><text x="2.9556%" y="206.50"></text></g><g><title>inner (pynput\_util\__init__.py:144) (27 samples, 1.43%)</title><rect x="2.7056%" y="212" width="1.4324%" height="15" fill="rgb(247,70,30)" fg:x="51" fg:w="27"/><text x="2.9556%" y="222.50"></text></g><g><title>on_move (SEM_Apprentice.py:141) (27 samples, 1.43%)</title><rect x="2.7056%" y="228" width="1.4324%" height="15" fill="rgb(212,68,19)" fg:x="51" fg:w="27"/><text x="2.9556%" y="238.50"></text></g><g><title>info (logging\__init__.py:2148) (27 samples, 1.43%)</title><rect x="2.7056%" y="244" width="1.4324%" height="15" fill="rgb(240,187,13)" fg:x="51" fg:w="27"/><text x="2.9556%" y="254.50"></text></g><g><title>info (logging\__init__.py:1489) (27 samples, 1.43%)</title><rect x="2.7056%" y="260" width="1.4324%" height="15" fill="rgb(223,113,26)" fg:x="51" fg:w="27"/><text x="2.9556%" y="270.50"></text></g><g><title>_log (logging\__init__.py:1634) (22 samples, 1.17%)</title><rect x="2.9708%" y="276" width="1.1671%" height="15" fill="rgb(206,192,2)" fg:x="56" fg:w="22"/><text x="3.2208%" y="286.50"></text></g><g><title>handle (logging\__init__.py:1644) (21 samples, 1.11%)</title><rect x="3.0239%" y="292" width="1.1141%" height="15" fill="rgb(241,108,4)" fg:x="57" fg:w="21"/><text x="3.2739%" y="302.50"></text></g><g><title>callHandlers (logging\__init__.py:1706) (21 samples, 1.11%)</title><rect x="3.0239%" y="308" width="1.1141%" height="15" fill="rgb(247,173,49)" fg:x="57" fg:w="21"/><text x="3.2739%" y="318.50"></text></g><g><title>handle (logging\__init__.py:978) (21 samples, 1.11%)</title><rect x="3.0239%" y="324" width="1.1141%" height="15" fill="rgb(224,114,35)" fg:x="57" fg:w="21"/><text x="3.2739%" y="334.50"></text></g><g><title>emit (logging\__init__.py:1230) (21 samples, 1.11%)</title><rect x="3.0239%" y="340" width="1.1141%" height="15" fill="rgb(245,159,27)" fg:x="57" fg:w="21"/><text x="3.2739%" y="350.50"></text></g><g><title>emit (logging\__init__.py:1114) (7 samples, 0.37%)</title><rect x="3.7666%" y="356" width="0.3714%" height="15" fill="rgb(245,172,44)" fg:x="71" fg:w="7"/><text x="4.0166%" y="366.50"></text></g><g><title>flush (logging\__init__.py:1094) (7 samples, 0.37%)</title><rect x="3.7666%" y="372" width="0.3714%" height="15" fill="rgb(236,23,11)" fg:x="71" fg:w="7"/><text x="4.0166%" y="382.50"></text></g><g><title>grab (PIL\ImageGrab.py:46) (4 samples, 0.21%)</title><rect x="4.1910%" y="292" width="0.2122%" height="15" fill="rgb(205,117,38)" fg:x="79" fg:w="4"/><text x="4.4410%" y="302.50"></text></g><g><title>snap_and_save (SEM_Apprentice.py:120) (5 samples, 0.27%)</title><rect x="4.1910%" y="244" width="0.2653%" height="15" fill="rgb(237,72,25)" fg:x="79" fg:w="5"/><text x="4.4410%" y="254.50"></text></g><g><title>wrapper (pyscreeze\__init__.py:145) (5 samples, 0.27%)</title><rect x="4.1910%" y="260" width="0.2653%" height="15" fill="rgb(244,70,9)" fg:x="79" fg:w="5"/><text x="4.4410%" y="270.50"></text></g><g><title>_screenshot_win32 (pyscreeze\__init__.py:457) (5 samples, 0.27%)</title><rect x="4.1910%" y="276" width="0.2653%" height="15" fill="rgb(217,125,39)" fg:x="79" fg:w="5"/><text x="4.4410%" y="286.50"></text></g><g><title>snap_and_save (SEM_Apprentice.py:121) (3 samples, 0.16%)</title><rect x="4.4562%" y="244" width="0.1592%" height="15" fill="rgb(235,36,10)" fg:x="84" fg:w="3"/><text x="4.7062%" y="254.50"></text></g><g><title>_handle (pynput\mouse\_win32.py:212) (16 samples, 0.85%)</title><rect x="4.1379%" y="196" width="0.8488%" height="15" fill="rgb(251,123,47)" fg:x="78" fg:w="16"/><text x="4.3879%" y="206.50"></text></g><g><title>inner (pynput\_util\__init__.py:144) (16 samples, 0.85%)</title><rect x="4.1379%" y="212" width="0.8488%" height="15" fill="rgb(221,13,13)" fg:x="78" fg:w="16"/><text x="4.3879%" y="222.50"></text></g><g><title>on_click (SEM_Apprentice.py:147) (16 samples, 0.85%)</title><rect x="4.1379%" y="228" width="0.8488%" height="15" fill="rgb(238,131,9)" fg:x="78" fg:w="16"/><text x="4.3879%" y="238.50"></text></g><g><title>snap_and_save (SEM_Apprentice.py:123) (7 samples, 0.37%)</title><rect x="4.6154%" y="244" width="0.3714%" height="15" fill="rgb(211,50,8)" fg:x="87" fg:w="7"/><text x="4.8654%" y="254.50"></text></g><g><title>yesno (SEM_Apprentice.py:169) (5 samples, 0.27%)</title><rect x="4.9867%" y="244" width="0.2653%" height="15" fill="rgb(245,182,24)" fg:x="94" fg:w="5"/><text x="5.2367%" y="254.50"></text></g><g><title>__init__ (tkinter\__init__.py:2326) (5 samples, 0.27%)</title><rect x="4.9867%" y="260" width="0.2653%" height="15" fill="rgb(242,14,37)" fg:x="94" fg:w="5"/><text x="5.2367%" y="270.50"></text></g><g><title>_handler (pynput\_util\win32.py:307) (63 samples, 3.34%)</title><rect x="2.2812%" y="148" width="3.3422%" height="15" fill="rgb(246,228,12)" fg:x="43" fg:w="63"/><text x="2.5312%" y="158.50">_ha..</text></g><g><title>inner (pynput\_util\__init__.py:228) (63 samples, 3.34%)</title><rect x="2.2812%" y="164" width="3.3422%" height="15" fill="rgb(213,55,15)" fg:x="43" fg:w="63"/><text x="2.5312%" y="174.50">inn..</text></g><g><title>_handler (pynput\_util\win32.py:390) (60 samples, 3.18%)</title><rect x="2.4403%" y="180" width="3.1830%" height="15" fill="rgb(209,9,3)" fg:x="46" fg:w="60"/><text x="2.6903%" y="190.50">_ha..</text></g><g><title>_handle (pynput\mouse\_win32.py:221) (12 samples, 0.64%)</title><rect x="4.9867%" y="196" width="0.6366%" height="15" fill="rgb(230,59,30)" fg:x="94" fg:w="12"/><text x="5.2367%" y="206.50"></text></g><g><title>inner (pynput\_util\__init__.py:144) (12 samples, 0.64%)</title><rect x="4.9867%" y="212" width="0.6366%" height="15" fill="rgb(209,121,21)" fg:x="94" fg:w="12"/><text x="5.2367%" y="222.50"></text></g><g><title>on_scroll (SEM_Apprentice.py:160) (12 samples, 0.64%)</title><rect x="4.9867%" y="228" width="0.6366%" height="15" fill="rgb(220,109,13)" fg:x="94" fg:w="12"/><text x="5.2367%" y="238.50"></text></g><g><title>yesno (SEM_Apprentice.py:173) (7 samples, 0.37%)</title><rect x="5.2520%" y="244" width="0.3714%" height="15" fill="rgb(232,18,1)" fg:x="99" fg:w="7"/><text x="5.5020%" y="254.50"></text></g><g><title>askyesno (tkinter\messagebox.py:114) (7 samples, 0.37%)</title><rect x="5.2520%" y="260" width="0.3714%" height="15" fill="rgb(215,41,42)" fg:x="99" fg:w="7"/><text x="5.5020%" y="270.50"></text></g><g><title>_show (tkinter\messagebox.py:76) (7 samples, 0.37%)</title><rect x="5.2520%" y="276" width="0.3714%" height="15" fill="rgb(224,123,36)" fg:x="99" fg:w="7"/><text x="5.5020%" y="286.50"></text></g><g><title>show (tkinter\commondialog.py:45) (7 samples, 0.37%)</title><rect x="5.2520%" y="292" width="0.3714%" height="15" fill="rgb(240,125,3)" fg:x="99" fg:w="7"/><text x="5.5020%" y="302.50"></text></g><g><title>_run (pynput\_util\win32.py:357) (80 samples, 4.24%)</title><rect x="1.4854%" y="116" width="4.2440%" height="15" fill="rgb(205,98,50)" fg:x="28" fg:w="80"/><text x="1.7354%" y="126.50">_run ..</text></g><g><title>__iter__ (pynput\_util\win32.py:190) (79 samples, 4.19%)</title><rect x="1.5385%" y="132" width="4.1910%" height="15" fill="rgb(205,185,37)" fg:x="29" fg:w="79"/><text x="1.7885%" y="142.50">__ite..</text></g><g><title>_handler (pynput\_util\win32.py:315) (2 samples, 0.11%)</title><rect x="5.6233%" y="148" width="0.1061%" height="15" fill="rgb(238,207,15)" fg:x="106" fg:w="2"/><text x="5.8733%" y="158.50"></text></g><g><title>_process (pynput\keyboard\_win32.py:282) (2 samples, 0.11%)</title><rect x="5.7294%" y="148" width="0.1061%" height="15" fill="rgb(213,199,42)" fg:x="108" fg:w="2"/><text x="5.9794%" y="158.50"></text></g><g><title>_event_to_key (pynput\keyboard\_win32.py:321) (2 samples, 0.11%)</title><rect x="5.7294%" y="164" width="0.1061%" height="15" fill="rgb(235,201,11)" fg:x="108" fg:w="2"/><text x="5.9794%" y="174.50"></text></g><g><title>_translate (pynput\keyboard\_win32.py:336) (2 samples, 0.11%)</title><rect x="5.7294%" y="180" width="0.1061%" height="15" fill="rgb(207,46,11)" fg:x="108" fg:w="2"/><text x="5.9794%" y="190.50"></text></g><g><title>snap_and_save (SEM_Apprentice.py:110) (2 samples, 0.11%)</title><rect x="5.9416%" y="196" width="0.1061%" height="15" fill="rgb(241,35,35)" fg:x="112" fg:w="2"/><text x="6.1916%" y="206.50"></text></g><g><title>info (logging\__init__.py:2148) (2 samples, 0.11%)</title><rect x="5.9416%" y="212" width="0.1061%" height="15" fill="rgb(243,32,47)" fg:x="112" fg:w="2"/><text x="6.1916%" y="222.50"></text></g><g><title>info (logging\__init__.py:1489) (2 samples, 0.11%)</title><rect x="5.9416%" y="228" width="0.1061%" height="15" fill="rgb(247,202,23)" fg:x="112" fg:w="2"/><text x="6.1916%" y="238.50"></text></g><g><title>_log (logging\__init__.py:1634) (2 samples, 0.11%)</title><rect x="5.9416%" y="244" width="0.1061%" height="15" fill="rgb(219,102,11)" fg:x="112" fg:w="2"/><text x="6.1916%" y="254.50"></text></g><g><title>handle (logging\__init__.py:1644) (2 samples, 0.11%)</title><rect x="5.9416%" y="260" width="0.1061%" height="15" fill="rgb(243,110,44)" fg:x="112" fg:w="2"/><text x="6.1916%" y="270.50"></text></g><g><title>callHandlers (logging\__init__.py:1706) (2 samples, 0.11%)</title><rect x="5.9416%" y="276" width="0.1061%" height="15" fill="rgb(222,74,54)" fg:x="112" fg:w="2"/><text x="6.1916%" y="286.50"></text></g><g><title>handle (logging\__init__.py:978) (2 samples, 0.11%)</title><rect x="5.9416%" y="292" width="0.1061%" height="15" fill="rgb(216,99,12)" fg:x="112" fg:w="2"/><text x="6.1916%" y="302.50"></text></g><g><title>emit (logging\__init__.py:1230) (2 samples, 0.11%)</title><rect x="5.9416%" y="308" width="0.1061%" height="15" fill="rgb(226,22,26)" fg:x="112" fg:w="2"/><text x="6.1916%" y="318.50"></text></g><g><title>grab (PIL\ImageGrab.py:46) (162 samples, 8.59%)</title><rect x="6.2069%" y="244" width="8.5942%" height="15" fill="rgb(217,163,10)" fg:x="117" fg:w="162"/><text x="6.4569%" y="254.50">grab (PIL\Im..</text></g><g><title>frombytes (PIL\Image.py:2968) (42 samples, 2.23%)</title><rect x="14.8011%" y="260" width="2.2281%" height="15" fill="rgb(213,25,53)" fg:x="279" fg:w="42"/><text x="15.0511%" y="270.50">f..</text></g><g><title>new (PIL\Image.py:2932) (42 samples, 2.23%)</title><rect x="14.8011%" y="276" width="2.2281%" height="15" fill="rgb(252,105,26)" fg:x="279" fg:w="42"/><text x="15.0511%" y="286.50">n..</text></g><g><title>snap_and_save (SEM_Apprentice.py:120) (239 samples, 12.68%)</title><rect x="6.0477%" y="196" width="12.6790%" height="15" fill="rgb(220,39,43)" fg:x="114" fg:w="239"/><text x="6.2977%" y="206.50">snap_and_save (SEM_..</text></g><g><title>wrapper (pyscreeze\__init__.py:145) (239 samples, 12.68%)</title><rect x="6.0477%" y="212" width="12.6790%" height="15" fill="rgb(229,68,48)" fg:x="114" fg:w="239"/><text x="6.2977%" y="222.50">wrapper (pyscreeze\..</text></g><g><title>_screenshot_win32 (pyscreeze\__init__.py:457) (239 samples, 12.68%)</title><rect x="6.0477%" y="228" width="12.6790%" height="15" fill="rgb(252,8,32)" fg:x="114" fg:w="239"/><text x="6.2977%" y="238.50">_screenshot_win32 (..</text></g><g><title>grab (PIL\ImageGrab.py:49) (74 samples, 3.93%)</title><rect x="14.8011%" y="244" width="3.9257%" height="15" fill="rgb(223,20,43)" fg:x="279" fg:w="74"/><text x="15.0511%" y="254.50">grab..</text></g><g><title>frombytes (PIL\Image.py:2969) (32 samples, 1.70%)</title><rect x="17.0292%" y="260" width="1.6976%" height="15" fill="rgb(229,81,49)" fg:x="321" fg:w="32"/><text x="17.2792%" y="270.50"></text></g><g><title>frombytes (PIL\Image.py:826) (32 samples, 1.70%)</title><rect x="17.0292%" y="276" width="1.6976%" height="15" fill="rgb(236,28,36)" fg:x="321" fg:w="32"/><text x="17.2792%" y="286.50"></text></g><g><title>tobytes (PIL\Image.py:771) (58 samples, 3.08%)</title><rect x="22.7056%" y="228" width="3.0769%" height="15" fill="rgb(249,185,26)" fg:x="428" fg:w="58"/><text x="22.9556%" y="238.50">tob..</text></g><g><title>snap_and_save (SEM_Apprentice.py:121) (162 samples, 8.59%)</title><rect x="18.7268%" y="196" width="8.5942%" height="15" fill="rgb(249,174,33)" fg:x="353" fg:w="162"/><text x="18.9768%" y="206.50">snap_and_sav..</text></g><g><title>__array_interface__ (PIL\Image.py:701) (97 samples, 5.15%)</title><rect x="22.1751%" y="212" width="5.1459%" height="15" fill="rgb(233,201,37)" fg:x="418" fg:w="97"/><text x="22.4251%" y="222.50">__arra..</text></g><g><title>tobytes (PIL\Image.py:779) (29 samples, 1.54%)</title><rect x="25.7825%" y="228" width="1.5385%" height="15" fill="rgb(221,78,26)" fg:x="486" fg:w="29"/><text x="26.0325%" y="238.50"></text></g><g><title>_process (pynput\keyboard\_win32.py:287) (877 samples, 46.53%)</title><rect x="5.8355%" y="148" width="46.5252%" height="15" fill="rgb(250,127,30)" fg:x="110" fg:w="877"/><text x="6.0855%" y="158.50">_process (pynput\keyboard\_win32.py:287)</text></g><g><title>inner (pynput\_util\__init__.py:144) (877 samples, 46.53%)</title><rect x="5.8355%" y="164" width="46.5252%" height="15" fill="rgb(230,49,44)" fg:x="110" fg:w="877"/><text x="6.0855%" y="174.50">inner (pynput\_util\__init__.py:144)</text></g><g><title>on_press (SEM_Apprentice.py:129) (877 samples, 46.53%)</title><rect x="5.8355%" y="180" width="46.5252%" height="15" fill="rgb(229,67,23)" fg:x="110" fg:w="877"/><text x="6.0855%" y="190.50">on_press (SEM_Apprentice.py:129)</text></g><g><title>snap_and_save (SEM_Apprentice.py:123) (472 samples, 25.04%)</title><rect x="27.3210%" y="196" width="25.0398%" height="15" fill="rgb(249,83,47)" fg:x="515" fg:w="472"/><text x="27.5710%" y="206.50">snap_and_save (SEM_Apprentice.py:123)</text></g><g><title>emit (logging\__init__.py:1110) (2 samples, 0.11%)</title><rect x="52.7851%" y="324" width="0.1061%" height="15" fill="rgb(215,43,3)" fg:x="995" fg:w="2"/><text x="53.0351%" y="334.50"></text></g><g><title>format (logging\__init__.py:953) (2 samples, 0.11%)</title><rect x="52.7851%" y="340" width="0.1061%" height="15" fill="rgb(238,154,13)" fg:x="995" fg:w="2"/><text x="53.0351%" y="350.50"></text></g><g><title>format (SEM_Apprentice.py:185) (2 samples, 0.11%)</title><rect x="52.7851%" y="356" width="0.1061%" height="15" fill="rgb(219,56,2)" fg:x="995" fg:w="2"/><text x="53.0351%" y="366.50"></text></g><g><title>format (logging\__init__.py:689) (2 samples, 0.11%)</title><rect x="52.7851%" y="372" width="0.1061%" height="15" fill="rgb(233,0,4)" fg:x="995" fg:w="2"/><text x="53.0351%" y="382.50"></text></g><g><title>snap_and_save (SEM_Apprentice.py:110) (5 samples, 0.27%)</title><rect x="52.6790%" y="196" width="0.2653%" height="15" fill="rgb(235,30,7)" fg:x="993" fg:w="5"/><text x="52.9290%" y="206.50"></text></g><g><title>info (logging\__init__.py:2148) (5 samples, 0.27%)</title><rect x="52.6790%" y="212" width="0.2653%" height="15" fill="rgb(250,79,13)" fg:x="993" fg:w="5"/><text x="52.9290%" y="222.50"></text></g><g><title>info (logging\__init__.py:1489) (5 samples, 0.27%)</title><rect x="52.6790%" y="228" width="0.2653%" height="15" fill="rgb(211,146,34)" fg:x="993" fg:w="5"/><text x="52.9290%" y="238.50"></text></g><g><title>_log (logging\__init__.py:1634) (4 samples, 0.21%)</title><rect x="52.7321%" y="244" width="0.2122%" height="15" fill="rgb(228,22,38)" fg:x="994" fg:w="4"/><text x="52.9821%" y="254.50"></text></g><g><title>handle (logging\__init__.py:1644) (3 samples, 0.16%)</title><rect x="52.7851%" y="260" width="0.1592%" height="15" fill="rgb(235,168,5)" fg:x="995" fg:w="3"/><text x="53.0351%" y="270.50"></text></g><g><title>callHandlers (logging\__init__.py:1706) (3 samples, 0.16%)</title><rect x="52.7851%" y="276" width="0.1592%" height="15" fill="rgb(221,155,16)" fg:x="995" fg:w="3"/><text x="53.0351%" y="286.50"></text></g><g><title>handle (logging\__init__.py:978) (3 samples, 0.16%)</title><rect x="52.7851%" y="292" width="0.1592%" height="15" fill="rgb(215,215,53)" fg:x="995" fg:w="3"/><text x="53.0351%" y="302.50"></text></g><g><title>emit (logging\__init__.py:1230) (3 samples, 0.16%)</title><rect x="52.7851%" y="308" width="0.1592%" height="15" fill="rgb(223,4,10)" fg:x="995" fg:w="3"/><text x="53.0351%" y="318.50"></text></g><g><title>grab (PIL\ImageGrab.py:46) (191 samples, 10.13%)</title><rect x="53.3687%" y="244" width="10.1326%" height="15" fill="rgb(234,103,6)" fg:x="1006" fg:w="191"/><text x="53.6187%" y="254.50">grab (PIL\Image..</text></g><g><title>frombytes (PIL\Image.py:2968) (29 samples, 1.54%)</title><rect x="63.5013%" y="260" width="1.5385%" height="15" fill="rgb(227,97,0)" fg:x="1197" fg:w="29"/><text x="63.7513%" y="270.50"></text></g><g><title>new (PIL\Image.py:2932) (29 samples, 1.54%)</title><rect x="63.5013%" y="276" width="1.5385%" height="15" fill="rgb(234,150,53)" fg:x="1197" fg:w="29"/><text x="63.7513%" y="286.50"></text></g><g><title>snap_and_save (SEM_Apprentice.py:120) (262 samples, 13.90%)</title><rect x="52.9443%" y="196" width="13.8992%" height="15" fill="rgb(228,201,54)" fg:x="998" fg:w="262"/><text x="53.1943%" y="206.50">snap_and_save (SEM_Ap..</text></g><g><title>wrapper (pyscreeze\__init__.py:145) (262 samples, 13.90%)</title><rect x="52.9443%" y="212" width="13.8992%" height="15" fill="rgb(222,22,37)" fg:x="998" fg:w="262"/><text x="53.1943%" y="222.50">wrapper (pyscreeze\__..</text></g><g><title>_screenshot_win32 (pyscreeze\__init__.py:457) (262 samples, 13.90%)</title><rect x="52.9443%" y="228" width="13.8992%" height="15" fill="rgb(237,53,32)" fg:x="998" fg:w="262"/><text x="53.1943%" y="238.50">_screenshot_win32 (py..</text></g><g><title>grab (PIL\ImageGrab.py:49) (63 samples, 3.34%)</title><rect x="63.5013%" y="244" width="3.3422%" height="15" fill="rgb(233,25,53)" fg:x="1197" fg:w="63"/><text x="63.7513%" y="254.50">gra..</text></g><g><title>frombytes (PIL\Image.py:2969) (34 samples, 1.80%)</title><rect x="65.0398%" y="260" width="1.8037%" height="15" fill="rgb(210,40,34)" fg:x="1226" fg:w="34"/><text x="65.2898%" y="270.50">f..</text></g><g><title>frombytes (PIL\Image.py:826) (34 samples, 1.80%)</title><rect x="65.0398%" y="276" width="1.8037%" height="15" fill="rgb(241,220,44)" fg:x="1226" fg:w="34"/><text x="65.2898%" y="286.50">f..</text></g><g><title>tobytes (PIL\Image.py:771) (55 samples, 2.92%)</title><rect x="70.1326%" y="228" width="2.9178%" height="15" fill="rgb(235,28,35)" fg:x="1322" fg:w="55"/><text x="70.3826%" y="238.50">to..</text></g><g><title>snap_and_save (SEM_Apprentice.py:121) (145 samples, 7.69%)</title><rect x="66.8435%" y="196" width="7.6923%" height="15" fill="rgb(210,56,17)" fg:x="1260" fg:w="145"/><text x="67.0935%" y="206.50">snap_and_sa..</text></g><g><title>__array_interface__ (PIL\Image.py:701) (85 samples, 4.51%)</title><rect x="70.0265%" y="212" width="4.5093%" height="15" fill="rgb(224,130,29)" fg:x="1320" fg:w="85"/><text x="70.2765%" y="222.50">__arr..</text></g><g><title>tobytes (PIL\Image.py:779) (28 samples, 1.49%)</title><rect x="73.0504%" y="228" width="1.4854%" height="15" fill="rgb(235,212,8)" fg:x="1377" fg:w="28"/><text x="73.3004%" y="238.50"></text></g><g><title>all (1,885 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(223,33,50)" fg:x="0" fg:w="1885"/><text x="0.2500%" y="62.50"></text></g><g><title>_bootstrap (threading.py:995) (1,857 samples, 98.51%)</title><rect x="1.4854%" y="68" width="98.5146%" height="15" fill="rgb(219,149,13)" fg:x="28" fg:w="1857"/><text x="1.7354%" y="78.50">_bootstrap (threading.py:995)</text></g><g><title>_bootstrap_inner (threading.py:1038) (1,857 samples, 98.51%)</title><rect x="1.4854%" y="84" width="98.5146%" height="15" fill="rgb(250,156,29)" fg:x="28" fg:w="1857"/><text x="1.7354%" y="94.50">_bootstrap_inner (threading.py:1038)</text></g><g><title>run (pynput\_util\__init__.py:210) (1,857 samples, 98.51%)</title><rect x="1.4854%" y="100" width="98.5146%" height="15" fill="rgb(216,193,19)" fg:x="28" fg:w="1857"/><text x="1.7354%" y="110.50">run (pynput\_util\__init__.py:210)</text></g><g><title>_run (pynput\_util\win32.py:361) (1,777 samples, 94.27%)</title><rect x="5.7294%" y="116" width="94.2706%" height="15" fill="rgb(216,135,14)" fg:x="108" fg:w="1777"/><text x="5.9794%" y="126.50">_run (pynput\_util\win32.py:361)</text></g><g><title>inner (pynput\_util\__init__.py:228) (1,777 samples, 94.27%)</title><rect x="5.7294%" y="132" width="94.2706%" height="15" fill="rgb(241,47,5)" fg:x="108" fg:w="1777"/><text x="5.9794%" y="142.50">inner (pynput\_util\__init__.py:228)</text></g><g><title>_process (pynput\keyboard\_win32.py:290) (898 samples, 47.64%)</title><rect x="52.3607%" y="148" width="47.6393%" height="15" fill="rgb(233,42,35)" fg:x="987" fg:w="898"/><text x="52.6107%" y="158.50">_process (pynput\keyboard\_win32.py:290)</text></g><g><title>inner (pynput\_util\__init__.py:144) (898 samples, 47.64%)</title><rect x="52.3607%" y="164" width="47.6393%" height="15" fill="rgb(231,13,6)" fg:x="987" fg:w="898"/><text x="52.6107%" y="174.50">inner (pynput\_util\__init__.py:144)</text></g><g><title>on_release (SEM_Apprentice.py:135) (898 samples, 47.64%)</title><rect x="52.3607%" y="180" width="47.6393%" height="15" fill="rgb(207,181,40)" fg:x="987" fg:w="898"/><text x="52.6107%" y="190.50">on_release (SEM_Apprentice.py:135)</text></g><g><title>snap_and_save (SEM_Apprentice.py:123) (480 samples, 25.46%)</title><rect x="74.5358%" y="196" width="25.4642%" height="15" fill="rgb(254,173,49)" fg:x="1405" fg:w="480"/><text x="74.7858%" y="206.50">snap_and_save (SEM_Apprentice.py:123)</text></g></svg></svg>