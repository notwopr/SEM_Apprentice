<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="602" onload="init(evt)" viewBox="0 0 1200 602" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="602" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">C:\Program Files\Python311\Scripts\py-spy.exe record -o profile.svg -- python.exe SEM_Apprentice.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="591.00"> </text><svg id="frames" x="10" width="1180" total_samples="2148"><g><title>&lt;module&gt; (numpy\__init__.py:144) (3 samples, 0.14%)</title><rect x="0.2793%" y="452" width="0.1397%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="3"/><text x="0.5293%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1234) (3 samples, 0.14%)</title><rect x="0.2793%" y="468" width="0.1397%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="3"/><text x="0.5293%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.14%)</title><rect x="0.2793%" y="484" width="0.1397%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="3"/><text x="0.5293%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (3 samples, 0.14%)</title><rect x="0.2793%" y="500" width="0.1397%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="3"/><text x="0.5293%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (3 samples, 0.14%)</title><rect x="0.2793%" y="516" width="0.1397%" height="15" fill="rgb(208,68,35)" fg:x="6" fg:w="3"/><text x="0.5293%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.14%)</title><rect x="0.2793%" y="532" width="0.1397%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="3"/><text x="0.5293%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (3 samples, 0.14%)</title><rect x="0.2793%" y="548" width="0.1397%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="3"/><text x="0.5293%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.14%)</title><rect x="0.2793%" y="564" width="0.1397%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="3"/><text x="0.5293%" y="574.50"></text></g><g><title>&lt;module&gt; (cv2\__init__.py:11) (9 samples, 0.42%)</title><rect x="0.0931%" y="356" width="0.4190%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="9"/><text x="0.3431%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (9 samples, 0.42%)</title><rect x="0.0931%" y="372" width="0.4190%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="9"/><text x="0.3431%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (9 samples, 0.42%)</title><rect x="0.0931%" y="388" width="0.4190%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="9"/><text x="0.3431%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (9 samples, 0.42%)</title><rect x="0.0931%" y="404" width="0.4190%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="9"/><text x="0.3431%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (9 samples, 0.42%)</title><rect x="0.0931%" y="420" width="0.4190%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="9"/><text x="0.3431%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (9 samples, 0.42%)</title><rect x="0.0931%" y="436" width="0.4190%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="9"/><text x="0.3431%" y="446.50"></text></g><g><title>&lt;module&gt; (pyscreeze\__init__.py:45) (12 samples, 0.56%)</title><rect x="0.0931%" y="260" width="0.5587%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="12"/><text x="0.3431%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (12 samples, 0.56%)</title><rect x="0.0931%" y="276" width="0.5587%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="12"/><text x="0.3431%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (12 samples, 0.56%)</title><rect x="0.0931%" y="292" width="0.5587%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="12"/><text x="0.3431%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (12 samples, 0.56%)</title><rect x="0.0931%" y="308" width="0.5587%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="12"/><text x="0.3431%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (12 samples, 0.56%)</title><rect x="0.0931%" y="324" width="0.5587%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="12"/><text x="0.3431%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.56%)</title><rect x="0.0931%" y="340" width="0.5587%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="12"/><text x="0.3431%" y="350.50"></text></g><g><title>&lt;module&gt; (cv2\__init__.py:181) (3 samples, 0.14%)</title><rect x="0.5121%" y="356" width="0.1397%" height="15" fill="rgb(249,33,26)" fg:x="11" fg:w="3"/><text x="0.7621%" y="366.50"></text></g><g><title>&lt;module&gt; (pyautogui\__init__.py:183) (13 samples, 0.61%)</title><rect x="0.0931%" y="164" width="0.6052%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="13"/><text x="0.3431%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (13 samples, 0.61%)</title><rect x="0.0931%" y="180" width="0.6052%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="13"/><text x="0.3431%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (13 samples, 0.61%)</title><rect x="0.0931%" y="196" width="0.6052%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="13"/><text x="0.3431%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (13 samples, 0.61%)</title><rect x="0.0931%" y="212" width="0.6052%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="13"/><text x="0.3431%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (13 samples, 0.61%)</title><rect x="0.0931%" y="228" width="0.6052%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="13"/><text x="0.3431%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (13 samples, 0.61%)</title><rect x="0.0931%" y="244" width="0.6052%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="13"/><text x="0.3431%" y="254.50"></text></g><g><title>&lt;module&gt; (SEM_Apprentice.py:16) (18 samples, 0.84%)</title><rect x="0.0931%" y="68" width="0.8380%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="18"/><text x="0.3431%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (18 samples, 0.84%)</title><rect x="0.0931%" y="84" width="0.8380%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="18"/><text x="0.3431%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (18 samples, 0.84%)</title><rect x="0.0931%" y="100" width="0.8380%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="18"/><text x="0.3431%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (18 samples, 0.84%)</title><rect x="0.0931%" y="116" width="0.8380%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="18"/><text x="0.3431%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (18 samples, 0.84%)</title><rect x="0.0931%" y="132" width="0.8380%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="18"/><text x="0.3431%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (18 samples, 0.84%)</title><rect x="0.0931%" y="148" width="0.8380%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="18"/><text x="0.3431%" y="158.50"></text></g><g><title>&lt;module&gt; (pyautogui\__init__.py:249) (5 samples, 0.23%)</title><rect x="0.6983%" y="164" width="0.2328%" height="15" fill="rgb(254,191,54)" fg:x="15" fg:w="5"/><text x="0.9483%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (5 samples, 0.23%)</title><rect x="0.6983%" y="180" width="0.2328%" height="15" fill="rgb(241,83,37)" fg:x="15" fg:w="5"/><text x="0.9483%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (5 samples, 0.23%)</title><rect x="0.6983%" y="196" width="0.2328%" height="15" fill="rgb(233,36,39)" fg:x="15" fg:w="5"/><text x="0.9483%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (5 samples, 0.23%)</title><rect x="0.6983%" y="212" width="0.2328%" height="15" fill="rgb(226,3,54)" fg:x="15" fg:w="5"/><text x="0.9483%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (5 samples, 0.23%)</title><rect x="0.6983%" y="228" width="0.2328%" height="15" fill="rgb(245,192,40)" fg:x="15" fg:w="5"/><text x="0.9483%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (5 samples, 0.23%)</title><rect x="0.6983%" y="244" width="0.2328%" height="15" fill="rgb(238,167,29)" fg:x="15" fg:w="5"/><text x="0.9483%" y="254.50"></text></g><g><title>&lt;module&gt; (mouseinfo\__init__.py:265) (4 samples, 0.19%)</title><rect x="0.7449%" y="260" width="0.1862%" height="15" fill="rgb(232,182,51)" fg:x="16" fg:w="4"/><text x="0.9949%" y="270.50"></text></g><g><title>system (platform.py:921) (4 samples, 0.19%)</title><rect x="0.7449%" y="276" width="0.1862%" height="15" fill="rgb(231,60,39)" fg:x="16" fg:w="4"/><text x="0.9949%" y="286.50"></text></g><g><title>uname (platform.py:856) (3 samples, 0.14%)</title><rect x="0.7914%" y="292" width="0.1397%" height="15" fill="rgb(208,69,12)" fg:x="17" fg:w="3"/><text x="1.0414%" y="302.50"></text></g><g><title>win32_ver (platform.py:371) (3 samples, 0.14%)</title><rect x="0.7914%" y="308" width="0.1397%" height="15" fill="rgb(235,93,37)" fg:x="17" fg:w="3"/><text x="1.0414%" y="318.50"></text></g><g><title>_syscmd_ver (platform.py:284) (3 samples, 0.14%)</title><rect x="0.7914%" y="324" width="0.1397%" height="15" fill="rgb(213,116,39)" fg:x="17" fg:w="3"/><text x="1.0414%" y="334.50"></text></g><g><title>check_output (subprocess.py:466) (3 samples, 0.14%)</title><rect x="0.7914%" y="340" width="0.1397%" height="15" fill="rgb(222,207,29)" fg:x="17" fg:w="3"/><text x="1.0414%" y="350.50"></text></g><g><title>run (subprocess.py:548) (3 samples, 0.14%)</title><rect x="0.7914%" y="356" width="0.1397%" height="15" fill="rgb(206,96,30)" fg:x="17" fg:w="3"/><text x="1.0414%" y="366.50"></text></g><g><title>__init__ (subprocess.py:1024) (3 samples, 0.14%)</title><rect x="0.7914%" y="372" width="0.1397%" height="15" fill="rgb(218,138,4)" fg:x="17" fg:w="3"/><text x="1.0414%" y="382.50"></text></g><g><title>_execute_child (subprocess.py:1493) (3 samples, 0.14%)</title><rect x="0.7914%" y="388" width="0.1397%" height="15" fill="rgb(250,191,14)" fg:x="17" fg:w="3"/><text x="1.0414%" y="398.50"></text></g><g><title>&lt;module&gt; (SEM_Apprentice.py:17) (3 samples, 0.14%)</title><rect x="0.9311%" y="68" width="0.1397%" height="15" fill="rgb(239,60,40)" fg:x="20" fg:w="3"/><text x="1.1811%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (3 samples, 0.14%)</title><rect x="0.9311%" y="84" width="0.1397%" height="15" fill="rgb(206,27,48)" fg:x="20" fg:w="3"/><text x="1.1811%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (3 samples, 0.14%)</title><rect x="0.9311%" y="100" width="0.1397%" height="15" fill="rgb(225,35,8)" fg:x="20" fg:w="3"/><text x="1.1811%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.14%)</title><rect x="0.9311%" y="116" width="0.1397%" height="15" fill="rgb(250,213,24)" fg:x="20" fg:w="3"/><text x="1.1811%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (3 samples, 0.14%)</title><rect x="0.9311%" y="132" width="0.1397%" height="15" fill="rgb(247,123,22)" fg:x="20" fg:w="3"/><text x="1.1811%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.14%)</title><rect x="0.9311%" y="148" width="0.1397%" height="15" fill="rgb(231,138,38)" fg:x="20" fg:w="3"/><text x="1.1811%" y="158.50"></text></g><g><title>&lt;module&gt; (pynput\__init__.py:40) (3 samples, 0.14%)</title><rect x="0.9311%" y="164" width="0.1397%" height="15" fill="rgb(231,145,46)" fg:x="20" fg:w="3"/><text x="1.1811%" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1234) (3 samples, 0.14%)</title><rect x="0.9311%" y="180" width="0.1397%" height="15" fill="rgb(251,118,11)" fg:x="20" fg:w="3"/><text x="1.1811%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.14%)</title><rect x="0.9311%" y="196" width="0.1397%" height="15" fill="rgb(217,147,25)" fg:x="20" fg:w="3"/><text x="1.1811%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (3 samples, 0.14%)</title><rect x="0.9311%" y="212" width="0.1397%" height="15" fill="rgb(247,81,37)" fg:x="20" fg:w="3"/><text x="1.1811%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (3 samples, 0.14%)</title><rect x="0.9311%" y="228" width="0.1397%" height="15" fill="rgb(209,12,38)" fg:x="20" fg:w="3"/><text x="1.1811%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.14%)</title><rect x="0.9311%" y="244" width="0.1397%" height="15" fill="rgb(227,1,9)" fg:x="20" fg:w="3"/><text x="1.1811%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (3 samples, 0.14%)</title><rect x="0.9311%" y="260" width="0.1397%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="3"/><text x="1.1811%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.14%)</title><rect x="0.9311%" y="276" width="0.1397%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="3"/><text x="1.1811%" y="286.50"></text></g><g><title>&lt;module&gt; (pynput\keyboard\__init__.py:31) (3 samples, 0.14%)</title><rect x="0.9311%" y="292" width="0.1397%" height="15" fill="rgb(210,229,1)" fg:x="20" fg:w="3"/><text x="1.1811%" y="302.50"></text></g><g><title>backend (pynput\_util\__init__.py:70) (3 samples, 0.14%)</title><rect x="0.9311%" y="308" width="0.1397%" height="15" fill="rgb(222,148,37)" fg:x="20" fg:w="3"/><text x="1.1811%" y="318.50"></text></g><g><title>import_module (importlib\__init__.py:126) (3 samples, 0.14%)</title><rect x="0.9311%" y="324" width="0.1397%" height="15" fill="rgb(234,67,33)" fg:x="20" fg:w="3"/><text x="1.1811%" y="334.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1206) (3 samples, 0.14%)</title><rect x="0.9311%" y="340" width="0.1397%" height="15" fill="rgb(247,98,35)" fg:x="20" fg:w="3"/><text x="1.1811%" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (3 samples, 0.14%)</title><rect x="0.9311%" y="356" width="0.1397%" height="15" fill="rgb(247,138,52)" fg:x="20" fg:w="3"/><text x="1.1811%" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (3 samples, 0.14%)</title><rect x="0.9311%" y="372" width="0.1397%" height="15" fill="rgb(213,79,30)" fg:x="20" fg:w="3"/><text x="1.1811%" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.14%)</title><rect x="0.9311%" y="388" width="0.1397%" height="15" fill="rgb(246,177,23)" fg:x="20" fg:w="3"/><text x="1.1811%" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (3 samples, 0.14%)</title><rect x="0.9311%" y="404" width="0.1397%" height="15" fill="rgb(230,62,27)" fg:x="20" fg:w="3"/><text x="1.1811%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.14%)</title><rect x="0.9311%" y="420" width="0.1397%" height="15" fill="rgb(216,154,8)" fg:x="20" fg:w="3"/><text x="1.1811%" y="430.50"></text></g><g><title>&lt;module&gt; (pynput\keyboard\_win32.py:47) (3 samples, 0.14%)</title><rect x="0.9311%" y="436" width="0.1397%" height="15" fill="rgb(244,35,45)" fg:x="20" fg:w="3"/><text x="1.1811%" y="446.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1234) (3 samples, 0.14%)</title><rect x="0.9311%" y="452" width="0.1397%" height="15" fill="rgb(251,115,12)" fg:x="20" fg:w="3"/><text x="1.1811%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.14%)</title><rect x="0.9311%" y="468" width="0.1397%" height="15" fill="rgb(240,54,50)" fg:x="20" fg:w="3"/><text x="1.1811%" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (3 samples, 0.14%)</title><rect x="0.9311%" y="484" width="0.1397%" height="15" fill="rgb(233,84,52)" fg:x="20" fg:w="3"/><text x="1.1811%" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (3 samples, 0.14%)</title><rect x="0.9311%" y="500" width="0.1397%" height="15" fill="rgb(207,117,47)" fg:x="20" fg:w="3"/><text x="1.1811%" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.14%)</title><rect x="0.9311%" y="516" width="0.1397%" height="15" fill="rgb(249,43,39)" fg:x="20" fg:w="3"/><text x="1.1811%" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (3 samples, 0.14%)</title><rect x="0.9311%" y="532" width="0.1397%" height="15" fill="rgb(209,38,44)" fg:x="20" fg:w="3"/><text x="1.1811%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.14%)</title><rect x="0.9311%" y="548" width="0.1397%" height="15" fill="rgb(236,212,23)" fg:x="20" fg:w="3"/><text x="1.1811%" y="558.50"></text></g><g><title>&lt;module&gt; (dxcam\__init__.py:102) (10 samples, 0.47%)</title><rect x="1.1173%" y="164" width="0.4655%" height="15" fill="rgb(242,79,21)" fg:x="24" fg:w="10"/><text x="1.3673%" y="174.50"></text></g><g><title>__call__ (dxcam\__init__.py:15) (10 samples, 0.47%)</title><rect x="1.1173%" y="180" width="0.4655%" height="15" fill="rgb(211,96,35)" fg:x="24" fg:w="10"/><text x="1.3673%" y="190.50"></text></g><g><title>__init__ (dxcam\__init__.py:30) (10 samples, 0.47%)</title><rect x="1.1173%" y="196" width="0.4655%" height="15" fill="rgb(253,215,40)" fg:x="24" fg:w="10"/><text x="1.3673%" y="206.50"></text></g><g><title>__init__ (&lt;string&gt;:8) (10 samples, 0.47%)</title><rect x="1.1173%" y="212" width="0.4655%" height="15" fill="rgb(211,81,21)" fg:x="24" fg:w="10"/><text x="1.3673%" y="222.50"></text></g><g><title>__post_init__ (dxcam\core\device.py:33) (10 samples, 0.47%)</title><rect x="1.1173%" y="228" width="0.4655%" height="15" fill="rgb(208,190,38)" fg:x="24" fg:w="10"/><text x="1.3673%" y="238.50"></text></g><g><title>&lt;module&gt; (SEM_Apprentice.py:23) (12 samples, 0.56%)</title><rect x="1.1173%" y="68" width="0.5587%" height="15" fill="rgb(235,213,38)" fg:x="24" fg:w="12"/><text x="1.3673%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (12 samples, 0.56%)</title><rect x="1.1173%" y="84" width="0.5587%" height="15" fill="rgb(237,122,38)" fg:x="24" fg:w="12"/><text x="1.3673%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (12 samples, 0.56%)</title><rect x="1.1173%" y="100" width="0.5587%" height="15" fill="rgb(244,218,35)" fg:x="24" fg:w="12"/><text x="1.3673%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (12 samples, 0.56%)</title><rect x="1.1173%" y="116" width="0.5587%" height="15" fill="rgb(240,68,47)" fg:x="24" fg:w="12"/><text x="1.3673%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (12 samples, 0.56%)</title><rect x="1.1173%" y="132" width="0.5587%" height="15" fill="rgb(210,16,53)" fg:x="24" fg:w="12"/><text x="1.3673%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (12 samples, 0.56%)</title><rect x="1.1173%" y="148" width="0.5587%" height="15" fill="rgb(235,124,12)" fg:x="24" fg:w="12"/><text x="1.3673%" y="158.50"></text></g><g><title>yesno (SEM_Apprentice.py:172) (4 samples, 0.19%)</title><rect x="1.6760%" y="84" width="0.1862%" height="15" fill="rgb(224,169,11)" fg:x="36" fg:w="4"/><text x="1.9260%" y="94.50"></text></g><g><title>__init__ (tkinter\__init__.py:2326) (4 samples, 0.19%)</title><rect x="1.6760%" y="100" width="0.1862%" height="15" fill="rgb(250,166,2)" fg:x="36" fg:w="4"/><text x="1.9260%" y="110.50"></text></g><g><title>&lt;module&gt; (SEM_Apprentice.py:382) (16 samples, 0.74%)</title><rect x="1.6760%" y="68" width="0.7449%" height="15" fill="rgb(242,216,29)" fg:x="36" fg:w="16"/><text x="1.9260%" y="78.50"></text></g><g><title>yesno (SEM_Apprentice.py:176) (12 samples, 0.56%)</title><rect x="1.8622%" y="84" width="0.5587%" height="15" fill="rgb(230,116,27)" fg:x="40" fg:w="12"/><text x="2.1122%" y="94.50"></text></g><g><title>askyesno (tkinter\messagebox.py:114) (12 samples, 0.56%)</title><rect x="1.8622%" y="100" width="0.5587%" height="15" fill="rgb(228,99,48)" fg:x="40" fg:w="12"/><text x="2.1122%" y="110.50"></text></g><g><title>_show (tkinter\messagebox.py:76) (12 samples, 0.56%)</title><rect x="1.8622%" y="116" width="0.5587%" height="15" fill="rgb(253,11,6)" fg:x="40" fg:w="12"/><text x="2.1122%" y="126.50"></text></g><g><title>show (tkinter\commondialog.py:45) (12 samples, 0.56%)</title><rect x="1.8622%" y="132" width="0.5587%" height="15" fill="rgb(247,143,39)" fg:x="40" fg:w="12"/><text x="2.1122%" y="142.50"></text></g><g><title>_log (logging\__init__.py:1632) (3 samples, 0.14%)</title><rect x="4.3296%" y="292" width="0.1397%" height="15" fill="rgb(236,97,10)" fg:x="93" fg:w="3"/><text x="4.5796%" y="302.50"></text></g><g><title>makeRecord (logging\__init__.py:1601) (3 samples, 0.14%)</title><rect x="4.3296%" y="308" width="0.1397%" height="15" fill="rgb(233,208,19)" fg:x="93" fg:w="3"/><text x="4.5796%" y="318.50"></text></g><g><title>_handle (pynput\mouse\_win32.py:208) (14 samples, 0.65%)</title><rect x="4.1899%" y="196" width="0.6518%" height="15" fill="rgb(216,164,2)" fg:x="90" fg:w="14"/><text x="4.4399%" y="206.50"></text></g><g><title>inner (pynput\_util\__init__.py:144) (14 samples, 0.65%)</title><rect x="4.1899%" y="212" width="0.6518%" height="15" fill="rgb(220,129,5)" fg:x="90" fg:w="14"/><text x="4.4399%" y="222.50"></text></g><g><title>on_move (SEM_Apprentice.py:329) (14 samples, 0.65%)</title><rect x="4.1899%" y="228" width="0.6518%" height="15" fill="rgb(242,17,10)" fg:x="90" fg:w="14"/><text x="4.4399%" y="238.50"></text></g><g><title>gen_log_msg (SEM_Apprentice.py:248) (14 samples, 0.65%)</title><rect x="4.1899%" y="244" width="0.6518%" height="15" fill="rgb(242,107,0)" fg:x="90" fg:w="14"/><text x="4.4399%" y="254.50"></text></g><g><title>info (logging\__init__.py:2148) (14 samples, 0.65%)</title><rect x="4.1899%" y="260" width="0.6518%" height="15" fill="rgb(251,28,31)" fg:x="90" fg:w="14"/><text x="4.4399%" y="270.50"></text></g><g><title>info (logging\__init__.py:1489) (14 samples, 0.65%)</title><rect x="4.1899%" y="276" width="0.6518%" height="15" fill="rgb(233,223,10)" fg:x="90" fg:w="14"/><text x="4.4399%" y="286.50"></text></g><g><title>_log (logging\__init__.py:1634) (8 samples, 0.37%)</title><rect x="4.4693%" y="292" width="0.3724%" height="15" fill="rgb(215,21,27)" fg:x="96" fg:w="8"/><text x="4.7193%" y="302.50"></text></g><g><title>handle (logging\__init__.py:1644) (7 samples, 0.33%)</title><rect x="4.5158%" y="308" width="0.3259%" height="15" fill="rgb(232,23,21)" fg:x="97" fg:w="7"/><text x="4.7658%" y="318.50"></text></g><g><title>callHandlers (logging\__init__.py:1706) (7 samples, 0.33%)</title><rect x="4.5158%" y="324" width="0.3259%" height="15" fill="rgb(244,5,23)" fg:x="97" fg:w="7"/><text x="4.7658%" y="334.50"></text></g><g><title>handle (logging\__init__.py:978) (7 samples, 0.33%)</title><rect x="4.5158%" y="340" width="0.3259%" height="15" fill="rgb(226,81,46)" fg:x="97" fg:w="7"/><text x="4.7658%" y="350.50"></text></g><g><title>emit (logging\__init__.py:1230) (7 samples, 0.33%)</title><rect x="4.5158%" y="356" width="0.3259%" height="15" fill="rgb(247,70,30)" fg:x="97" fg:w="7"/><text x="4.7658%" y="366.50"></text></g><g><title>emit (logging\__init__.py:1114) (5 samples, 0.23%)</title><rect x="4.6089%" y="372" width="0.2328%" height="15" fill="rgb(212,68,19)" fg:x="99" fg:w="5"/><text x="4.8589%" y="382.50"></text></g><g><title>flush (logging\__init__.py:1094) (3 samples, 0.14%)</title><rect x="4.7020%" y="388" width="0.1397%" height="15" fill="rgb(240,187,13)" fg:x="101" fg:w="3"/><text x="4.9520%" y="398.50"></text></g><g><title>on_click (SEM_Apprentice.py:337) (69 samples, 3.21%)</title><rect x="4.8417%" y="228" width="3.2123%" height="15" fill="rgb(223,113,26)" fg:x="104" fg:w="69"/><text x="5.0917%" y="238.50">on_..</text></g><g><title>snap_and_save (SEM_Apprentice.py:307) (69 samples, 3.21%)</title><rect x="4.8417%" y="244" width="3.2123%" height="15" fill="rgb(206,192,2)" fg:x="104" fg:w="69"/><text x="5.0917%" y="254.50">sna..</text></g><g><title>dxcam_snap_save (SEM_Apprentice.py:288) (64 samples, 2.98%)</title><rect x="5.0745%" y="260" width="2.9795%" height="15" fill="rgb(241,108,4)" fg:x="109" fg:w="64"/><text x="5.3245%" y="270.50">dxc..</text></g><g><title>save (PIL\Image.py:2431) (64 samples, 2.98%)</title><rect x="5.0745%" y="276" width="2.9795%" height="15" fill="rgb(247,173,49)" fg:x="109" fg:w="64"/><text x="5.3245%" y="286.50">sav..</text></g><g><title>_save (PIL\PngImagePlugin.py:1420) (64 samples, 2.98%)</title><rect x="5.0745%" y="292" width="2.9795%" height="15" fill="rgb(224,114,35)" fg:x="109" fg:w="64"/><text x="5.3245%" y="302.50">_sa..</text></g><g><title>_save (PIL\ImageFile.py:522) (64 samples, 2.98%)</title><rect x="5.0745%" y="308" width="2.9795%" height="15" fill="rgb(245,159,27)" fg:x="109" fg:w="64"/><text x="5.3245%" y="318.50">_sa..</text></g><g><title>_encode_tile (PIL\ImageFile.py:541) (64 samples, 2.98%)</title><rect x="5.0745%" y="324" width="2.9795%" height="15" fill="rgb(245,172,44)" fg:x="109" fg:w="64"/><text x="5.3245%" y="334.50">_en..</text></g><g><title>dxcam_snap_save (SEM_Apprentice.py:283) (4 samples, 0.19%)</title><rect x="8.0540%" y="260" width="0.1862%" height="15" fill="rgb(236,23,11)" fg:x="173" fg:w="4"/><text x="8.3040%" y="270.50"></text></g><g><title>grab (dxcam\dxcam.py:70) (4 samples, 0.19%)</title><rect x="8.0540%" y="276" width="0.1862%" height="15" fill="rgb(205,117,38)" fg:x="173" fg:w="4"/><text x="8.3040%" y="286.50"></text></g><g><title>_grab (dxcam\dxcam.py:82) (3 samples, 0.14%)</title><rect x="8.1006%" y="292" width="0.1397%" height="15" fill="rgb(237,72,25)" fg:x="174" fg:w="3"/><text x="8.3506%" y="302.50"></text></g><g><title>process (dxcam\processor\base.py:15) (3 samples, 0.14%)</title><rect x="8.1006%" y="308" width="0.1397%" height="15" fill="rgb(244,70,9)" fg:x="174" fg:w="3"/><text x="8.3506%" y="318.50"></text></g><g><title>_encode_tile (PIL\ImageFile.py:541) (51 samples, 2.37%)</title><rect x="8.3333%" y="324" width="2.3743%" height="15" fill="rgb(217,125,39)" fg:x="179" fg:w="51"/><text x="8.5833%" y="334.50">_e..</text></g><g><title>_handle (pynput\mouse\_win32.py:212) (127 samples, 5.91%)</title><rect x="4.8417%" y="196" width="5.9125%" height="15" fill="rgb(235,36,10)" fg:x="104" fg:w="127"/><text x="5.0917%" y="206.50">_handle ..</text></g><g><title>inner (pynput\_util\__init__.py:144) (127 samples, 5.91%)</title><rect x="4.8417%" y="212" width="5.9125%" height="15" fill="rgb(251,123,47)" fg:x="104" fg:w="127"/><text x="5.0917%" y="222.50">inner (p..</text></g><g><title>on_click (SEM_Apprentice.py:340) (58 samples, 2.70%)</title><rect x="8.0540%" y="228" width="2.7002%" height="15" fill="rgb(221,13,13)" fg:x="173" fg:w="58"/><text x="8.3040%" y="238.50">on..</text></g><g><title>snap_and_save (SEM_Apprentice.py:307) (58 samples, 2.70%)</title><rect x="8.0540%" y="244" width="2.7002%" height="15" fill="rgb(238,131,9)" fg:x="173" fg:w="58"/><text x="8.3040%" y="254.50">sn..</text></g><g><title>dxcam_snap_save (SEM_Apprentice.py:288) (52 samples, 2.42%)</title><rect x="8.3333%" y="260" width="2.4209%" height="15" fill="rgb(211,50,8)" fg:x="179" fg:w="52"/><text x="8.5833%" y="270.50">dx..</text></g><g><title>save (PIL\Image.py:2431) (52 samples, 2.42%)</title><rect x="8.3333%" y="276" width="2.4209%" height="15" fill="rgb(245,182,24)" fg:x="179" fg:w="52"/><text x="8.5833%" y="286.50">sa..</text></g><g><title>_save (PIL\PngImagePlugin.py:1420) (52 samples, 2.42%)</title><rect x="8.3333%" y="292" width="2.4209%" height="15" fill="rgb(242,14,37)" fg:x="179" fg:w="52"/><text x="8.5833%" y="302.50">_s..</text></g><g><title>_save (PIL\ImageFile.py:522) (52 samples, 2.42%)</title><rect x="8.3333%" y="308" width="2.4209%" height="15" fill="rgb(246,228,12)" fg:x="179" fg:w="52"/><text x="8.5833%" y="318.50">_s..</text></g><g><title>yesno (SEM_Apprentice.py:172) (5 samples, 0.23%)</title><rect x="10.7542%" y="244" width="0.2328%" height="15" fill="rgb(213,55,15)" fg:x="231" fg:w="5"/><text x="11.0042%" y="254.50"></text></g><g><title>__init__ (tkinter\__init__.py:2326) (5 samples, 0.23%)</title><rect x="10.7542%" y="260" width="0.2328%" height="15" fill="rgb(209,9,3)" fg:x="231" fg:w="5"/><text x="11.0042%" y="270.50"></text></g><g><title>_handler (pynput\_util\win32.py:307) (156 samples, 7.26%)</title><rect x="4.0037%" y="148" width="7.2626%" height="15" fill="rgb(230,59,30)" fg:x="86" fg:w="156"/><text x="4.2537%" y="158.50">_handler (..</text></g><g><title>inner (pynput\_util\__init__.py:228) (156 samples, 7.26%)</title><rect x="4.0037%" y="164" width="7.2626%" height="15" fill="rgb(209,121,21)" fg:x="86" fg:w="156"/><text x="4.2537%" y="174.50">inner (pyn..</text></g><g><title>_handler (pynput\_util\win32.py:390) (155 samples, 7.22%)</title><rect x="4.0503%" y="180" width="7.2160%" height="15" fill="rgb(220,109,13)" fg:x="87" fg:w="155"/><text x="4.3003%" y="190.50">_handler (..</text></g><g><title>_handle (pynput\mouse\_win32.py:221) (11 samples, 0.51%)</title><rect x="10.7542%" y="196" width="0.5121%" height="15" fill="rgb(232,18,1)" fg:x="231" fg:w="11"/><text x="11.0042%" y="206.50"></text></g><g><title>inner (pynput\_util\__init__.py:144) (11 samples, 0.51%)</title><rect x="10.7542%" y="212" width="0.5121%" height="15" fill="rgb(215,41,42)" fg:x="231" fg:w="11"/><text x="11.0042%" y="222.50"></text></g><g><title>on_scroll (SEM_Apprentice.py:354) (11 samples, 0.51%)</title><rect x="10.7542%" y="228" width="0.5121%" height="15" fill="rgb(224,123,36)" fg:x="231" fg:w="11"/><text x="11.0042%" y="238.50"></text></g><g><title>yesno (SEM_Apprentice.py:176) (6 samples, 0.28%)</title><rect x="10.9870%" y="244" width="0.2793%" height="15" fill="rgb(240,125,3)" fg:x="236" fg:w="6"/><text x="11.2370%" y="254.50"></text></g><g><title>askyesno (tkinter\messagebox.py:114) (6 samples, 0.28%)</title><rect x="10.9870%" y="260" width="0.2793%" height="15" fill="rgb(205,98,50)" fg:x="236" fg:w="6"/><text x="11.2370%" y="270.50"></text></g><g><title>_show (tkinter\messagebox.py:76) (6 samples, 0.28%)</title><rect x="10.9870%" y="276" width="0.2793%" height="15" fill="rgb(205,185,37)" fg:x="236" fg:w="6"/><text x="11.2370%" y="286.50"></text></g><g><title>show (tkinter\commondialog.py:45) (6 samples, 0.28%)</title><rect x="10.9870%" y="292" width="0.2793%" height="15" fill="rgb(238,207,15)" fg:x="236" fg:w="6"/><text x="11.2370%" y="302.50"></text></g><g><title>__iter__ (pynput\_util\win32.py:190) (192 samples, 8.94%)</title><rect x="2.4209%" y="132" width="8.9385%" height="15" fill="rgb(213,199,42)" fg:x="52" fg:w="192"/><text x="2.6709%" y="142.50">__iter__ (pyn..</text></g><g><title>_run (pynput\_util\win32.py:357) (193 samples, 8.99%)</title><rect x="2.4209%" y="116" width="8.9851%" height="15" fill="rgb(235,201,11)" fg:x="52" fg:w="193"/><text x="2.6709%" y="126.50">_run (pynput\..</text></g><g><title>_grab (dxcam\dxcam.py:81) (4 samples, 0.19%)</title><rect x="12.0577%" y="244" width="0.1862%" height="15" fill="rgb(207,46,11)" fg:x="259" fg:w="4"/><text x="12.3077%" y="254.50"></text></g><g><title>map (dxcam\core\stagesurf.py:52) (4 samples, 0.19%)</title><rect x="12.0577%" y="260" width="0.1862%" height="15" fill="rgb(241,35,35)" fg:x="259" fg:w="4"/><text x="12.3077%" y="270.50"></text></g><g><title>process (dxcam\processor\numpy_processor.py:36) (17 samples, 0.79%)</title><rect x="12.3371%" y="276" width="0.7914%" height="15" fill="rgb(243,32,47)" fg:x="265" fg:w="17"/><text x="12.5871%" y="286.50"></text></g><g><title>string_at (ctypes\__init__.py:519) (17 samples, 0.79%)</title><rect x="12.3371%" y="292" width="0.7914%" height="15" fill="rgb(247,202,23)" fg:x="265" fg:w="17"/><text x="12.5871%" y="302.50"></text></g><g><title>dxcam_snap_save (SEM_Apprentice.py:283) (29 samples, 1.35%)</title><rect x="11.9646%" y="212" width="1.3501%" height="15" fill="rgb(219,102,11)" fg:x="257" fg:w="29"/><text x="12.2146%" y="222.50"></text></g><g><title>grab (dxcam\dxcam.py:70) (29 samples, 1.35%)</title><rect x="11.9646%" y="228" width="1.3501%" height="15" fill="rgb(243,110,44)" fg:x="257" fg:w="29"/><text x="12.2146%" y="238.50"></text></g><g><title>_grab (dxcam\dxcam.py:82) (23 samples, 1.07%)</title><rect x="12.2439%" y="244" width="1.0708%" height="15" fill="rgb(222,74,54)" fg:x="263" fg:w="23"/><text x="12.4939%" y="254.50"></text></g><g><title>process (dxcam\processor\base.py:15) (23 samples, 1.07%)</title><rect x="12.2439%" y="260" width="1.0708%" height="15" fill="rgb(216,99,12)" fg:x="263" fg:w="23"/><text x="12.4939%" y="270.50"></text></g><g><title>process (dxcam\processor\numpy_processor.py:44) (4 samples, 0.19%)</title><rect x="13.1285%" y="276" width="0.1862%" height="15" fill="rgb(226,22,26)" fg:x="282" fg:w="4"/><text x="13.3785%" y="286.50"></text></g><g><title>&lt;lambda&gt; (dxcam\processor\numpy_processor.py:22) (4 samples, 0.19%)</title><rect x="13.1285%" y="292" width="0.1862%" height="15" fill="rgb(217,163,10)" fg:x="282" fg:w="4"/><text x="13.3785%" y="302.50"></text></g><g><title>frombytes (PIL\Image.py:2968) (7 samples, 0.33%)</title><rect x="13.3147%" y="260" width="0.3259%" height="15" fill="rgb(213,25,53)" fg:x="286" fg:w="7"/><text x="13.5647%" y="270.50"></text></g><g><title>new (PIL\Image.py:2932) (7 samples, 0.33%)</title><rect x="13.3147%" y="276" width="0.3259%" height="15" fill="rgb(252,105,26)" fg:x="286" fg:w="7"/><text x="13.5647%" y="286.50"></text></g><g><title>dxcam_snap_save (SEM_Apprentice.py:286) (14 samples, 0.65%)</title><rect x="13.3147%" y="212" width="0.6518%" height="15" fill="rgb(220,39,43)" fg:x="286" fg:w="14"/><text x="13.5647%" y="222.50"></text></g><g><title>fromarray (PIL\Image.py:3103) (14 samples, 0.65%)</title><rect x="13.3147%" y="228" width="0.6518%" height="15" fill="rgb(229,68,48)" fg:x="286" fg:w="14"/><text x="13.5647%" y="238.50"></text></g><g><title>frombuffer (PIL\Image.py:3027) (14 samples, 0.65%)</title><rect x="13.3147%" y="244" width="0.6518%" height="15" fill="rgb(252,8,32)" fg:x="286" fg:w="14"/><text x="13.5647%" y="254.50"></text></g><g><title>frombytes (PIL\Image.py:2969) (7 samples, 0.33%)</title><rect x="13.6406%" y="260" width="0.3259%" height="15" fill="rgb(223,20,43)" fg:x="293" fg:w="7"/><text x="13.8906%" y="270.50"></text></g><g><title>frombytes (PIL\Image.py:826) (7 samples, 0.33%)</title><rect x="13.6406%" y="276" width="0.3259%" height="15" fill="rgb(229,81,49)" fg:x="293" fg:w="7"/><text x="13.8906%" y="286.50"></text></g><g><title>_encode_tile (PIL\ImageFile.py:541) (738 samples, 34.36%)</title><rect x="14.1061%" y="276" width="34.3575%" height="15" fill="rgb(236,28,36)" fg:x="303" fg:w="738"/><text x="14.3561%" y="286.50">_encode_tile (PIL\ImageFile.py:541)</text></g><g><title>_process (pynput\keyboard\_win32.py:287) (797 samples, 37.10%)</title><rect x="11.4525%" y="148" width="37.1043%" height="15" fill="rgb(249,185,26)" fg:x="246" fg:w="797"/><text x="11.7025%" y="158.50">_process (pynput\keyboard\_win32.py:287)</text></g><g><title>inner (pynput\_util\__init__.py:144) (797 samples, 37.10%)</title><rect x="11.4525%" y="164" width="37.1043%" height="15" fill="rgb(249,174,33)" fg:x="246" fg:w="797"/><text x="11.7025%" y="174.50">inner (pynput\_util\__init__.py:144)</text></g><g><title>on_press (SEM_Apprentice.py:315) (797 samples, 37.10%)</title><rect x="11.4525%" y="180" width="37.1043%" height="15" fill="rgb(233,201,37)" fg:x="246" fg:w="797"/><text x="11.7025%" y="190.50">on_press (SEM_Apprentice.py:315)</text></g><g><title>snap_and_save (SEM_Apprentice.py:307) (796 samples, 37.06%)</title><rect x="11.4991%" y="196" width="37.0577%" height="15" fill="rgb(221,78,26)" fg:x="247" fg:w="796"/><text x="11.7491%" y="206.50">snap_and_save (SEM_Apprentice.py:307)</text></g><g><title>dxcam_snap_save (SEM_Apprentice.py:288) (743 samples, 34.59%)</title><rect x="13.9665%" y="212" width="34.5903%" height="15" fill="rgb(250,127,30)" fg:x="300" fg:w="743"/><text x="14.2165%" y="222.50">dxcam_snap_save (SEM_Apprentice.py:288)</text></g><g><title>save (PIL\Image.py:2431) (740 samples, 34.45%)</title><rect x="14.1061%" y="228" width="34.4507%" height="15" fill="rgb(230,49,44)" fg:x="303" fg:w="740"/><text x="14.3561%" y="238.50">save (PIL\Image.py:2431)</text></g><g><title>_save (PIL\PngImagePlugin.py:1420) (740 samples, 34.45%)</title><rect x="14.1061%" y="244" width="34.4507%" height="15" fill="rgb(229,67,23)" fg:x="303" fg:w="740"/><text x="14.3561%" y="254.50">_save (PIL\PngImagePlugin.py:1420)</text></g><g><title>_save (PIL\ImageFile.py:522) (740 samples, 34.45%)</title><rect x="14.1061%" y="260" width="34.4507%" height="15" fill="rgb(249,83,47)" fg:x="303" fg:w="740"/><text x="14.3561%" y="270.50">_save (PIL\ImageFile.py:522)</text></g><g><title>process (dxcam\processor\numpy_processor.py:36) (15 samples, 0.70%)</title><rect x="49.5345%" y="276" width="0.6983%" height="15" fill="rgb(215,43,3)" fg:x="1064" fg:w="15"/><text x="49.7845%" y="286.50"></text></g><g><title>string_at (ctypes\__init__.py:519) (15 samples, 0.70%)</title><rect x="49.5345%" y="292" width="0.6983%" height="15" fill="rgb(238,154,13)" fg:x="1064" fg:w="15"/><text x="49.7845%" y="302.50"></text></g><g><title>_grab (dxcam\dxcam.py:82) (29 samples, 1.35%)</title><rect x="49.0223%" y="244" width="1.3501%" height="15" fill="rgb(219,56,2)" fg:x="1053" fg:w="29"/><text x="49.2723%" y="254.50"></text></g><g><title>process (dxcam\processor\base.py:15) (29 samples, 1.35%)</title><rect x="49.0223%" y="260" width="1.3501%" height="15" fill="rgb(233,0,4)" fg:x="1053" fg:w="29"/><text x="49.2723%" y="270.50"></text></g><g><title>process (dxcam\processor\numpy_processor.py:44) (3 samples, 0.14%)</title><rect x="50.2328%" y="276" width="0.1397%" height="15" fill="rgb(235,30,7)" fg:x="1079" fg:w="3"/><text x="50.4828%" y="286.50"></text></g><g><title>&lt;lambda&gt; (dxcam\processor\numpy_processor.py:22) (3 samples, 0.14%)</title><rect x="50.2328%" y="292" width="0.1397%" height="15" fill="rgb(250,79,13)" fg:x="1079" fg:w="3"/><text x="50.4828%" y="302.50"></text></g><g><title>dxcam_snap_save (SEM_Apprentice.py:283) (32 samples, 1.49%)</title><rect x="48.9292%" y="212" width="1.4898%" height="15" fill="rgb(211,146,34)" fg:x="1051" fg:w="32"/><text x="49.1792%" y="222.50"></text></g><g><title>grab (dxcam\dxcam.py:70) (32 samples, 1.49%)</title><rect x="48.9292%" y="228" width="1.4898%" height="15" fill="rgb(228,22,38)" fg:x="1051" fg:w="32"/><text x="49.1792%" y="238.50"></text></g><g><title>frombytes (PIL\Image.py:2968) (14 samples, 0.65%)</title><rect x="50.4190%" y="260" width="0.6518%" height="15" fill="rgb(235,168,5)" fg:x="1083" fg:w="14"/><text x="50.6690%" y="270.50"></text></g><g><title>new (PIL\Image.py:2932) (14 samples, 0.65%)</title><rect x="50.4190%" y="276" width="0.6518%" height="15" fill="rgb(221,155,16)" fg:x="1083" fg:w="14"/><text x="50.6690%" y="286.50"></text></g><g><title>dxcam_snap_save (SEM_Apprentice.py:286) (28 samples, 1.30%)</title><rect x="50.4190%" y="212" width="1.3035%" height="15" fill="rgb(215,215,53)" fg:x="1083" fg:w="28"/><text x="50.6690%" y="222.50"></text></g><g><title>fromarray (PIL\Image.py:3103) (28 samples, 1.30%)</title><rect x="50.4190%" y="228" width="1.3035%" height="15" fill="rgb(223,4,10)" fg:x="1083" fg:w="28"/><text x="50.6690%" y="238.50"></text></g><g><title>frombuffer (PIL\Image.py:3027) (28 samples, 1.30%)</title><rect x="50.4190%" y="244" width="1.3035%" height="15" fill="rgb(234,103,6)" fg:x="1083" fg:w="28"/><text x="50.6690%" y="254.50"></text></g><g><title>frombytes (PIL\Image.py:2969) (14 samples, 0.65%)</title><rect x="51.0708%" y="260" width="0.6518%" height="15" fill="rgb(227,97,0)" fg:x="1097" fg:w="14"/><text x="51.3208%" y="270.50"></text></g><g><title>frombytes (PIL\Image.py:826) (14 samples, 0.65%)</title><rect x="51.0708%" y="276" width="0.6518%" height="15" fill="rgb(234,150,53)" fg:x="1097" fg:w="14"/><text x="51.3208%" y="286.50"></text></g><g><title>save (PIL\Image.py:2428) (4 samples, 0.19%)</title><rect x="51.7225%" y="228" width="0.1862%" height="15" fill="rgb(228,201,54)" fg:x="1111" fg:w="4"/><text x="51.9725%" y="238.50"></text></g><g><title>_encode_tile (PIL\ImageFile.py:541) (1,022 samples, 47.58%)</title><rect x="51.9553%" y="276" width="47.5791%" height="15" fill="rgb(222,22,37)" fg:x="1116" fg:w="1022"/><text x="52.2053%" y="286.50">_encode_tile (PIL\ImageFile.py:541)</text></g><g><title>putchunk (PIL\PngImagePlugin.py:1084) (3 samples, 0.14%)</title><rect x="99.5345%" y="308" width="0.1397%" height="15" fill="rgb(237,53,32)" fg:x="2138" fg:w="3"/><text x="99.7845%" y="318.50"></text></g><g><title>putchunk (PIL\PngImagePlugin.py:1085) (3 samples, 0.14%)</title><rect x="99.6741%" y="308" width="0.1397%" height="15" fill="rgb(233,25,53)" fg:x="2141" fg:w="3"/><text x="99.9241%" y="318.50"></text></g><g><title>_crc32 (PIL\PngImagePlugin.py:155) (3 samples, 0.14%)</title><rect x="99.6741%" y="324" width="0.1397%" height="15" fill="rgb(210,40,34)" fg:x="2141" fg:w="3"/><text x="99.9241%" y="334.50"></text></g><g><title>_bootstrap (threading.py:995) (2,093 samples, 97.44%)</title><rect x="2.4209%" y="68" width="97.4395%" height="15" fill="rgb(241,220,44)" fg:x="52" fg:w="2093"/><text x="2.6709%" y="78.50">_bootstrap (threading.py:995)</text></g><g><title>_bootstrap_inner (threading.py:1038) (2,093 samples, 97.44%)</title><rect x="2.4209%" y="84" width="97.4395%" height="15" fill="rgb(235,28,35)" fg:x="52" fg:w="2093"/><text x="2.6709%" y="94.50">_bootstrap_inner (threading.py:1038)</text></g><g><title>run (pynput\_util\__init__.py:210) (2,093 samples, 97.44%)</title><rect x="2.4209%" y="100" width="97.4395%" height="15" fill="rgb(210,56,17)" fg:x="52" fg:w="2093"/><text x="2.6709%" y="110.50">run (pynput\_util\__init__.py:210)</text></g><g><title>_run (pynput\_util\win32.py:361) (1,900 samples, 88.45%)</title><rect x="11.4060%" y="116" width="88.4544%" height="15" fill="rgb(224,130,29)" fg:x="245" fg:w="1900"/><text x="11.6560%" y="126.50">_run (pynput\_util\win32.py:361)</text></g><g><title>inner (pynput\_util\__init__.py:228) (1,900 samples, 88.45%)</title><rect x="11.4060%" y="132" width="88.4544%" height="15" fill="rgb(235,212,8)" fg:x="245" fg:w="1900"/><text x="11.6560%" y="142.50">inner (pynput\_util\__init__.py:228)</text></g><g><title>_process (pynput\keyboard\_win32.py:290) (1,102 samples, 51.30%)</title><rect x="48.5568%" y="148" width="51.3035%" height="15" fill="rgb(223,33,50)" fg:x="1043" fg:w="1102"/><text x="48.8068%" y="158.50">_process (pynput\keyboard\_win32.py:290)</text></g><g><title>inner (pynput\_util\__init__.py:144) (1,102 samples, 51.30%)</title><rect x="48.5568%" y="164" width="51.3035%" height="15" fill="rgb(219,149,13)" fg:x="1043" fg:w="1102"/><text x="48.8068%" y="174.50">inner (pynput\_util\__init__.py:144)</text></g><g><title>on_release (SEM_Apprentice.py:322) (1,102 samples, 51.30%)</title><rect x="48.5568%" y="180" width="51.3035%" height="15" fill="rgb(250,156,29)" fg:x="1043" fg:w="1102"/><text x="48.8068%" y="190.50">on_release (SEM_Apprentice.py:322)</text></g><g><title>snap_and_save (SEM_Apprentice.py:307) (1,099 samples, 51.16%)</title><rect x="48.6965%" y="196" width="51.1639%" height="15" fill="rgb(216,193,19)" fg:x="1046" fg:w="1099"/><text x="48.9465%" y="206.50">snap_and_save (SEM_Apprentice.py:307)</text></g><g><title>dxcam_snap_save (SEM_Apprentice.py:288) (1,034 samples, 48.14%)</title><rect x="51.7225%" y="212" width="48.1378%" height="15" fill="rgb(216,135,14)" fg:x="1111" fg:w="1034"/><text x="51.9725%" y="222.50">dxcam_snap_save (SEM_Apprentice.py:288)</text></g><g><title>save (PIL\Image.py:2431) (1,030 samples, 47.95%)</title><rect x="51.9088%" y="228" width="47.9516%" height="15" fill="rgb(241,47,5)" fg:x="1115" fg:w="1030"/><text x="52.1588%" y="238.50">save (PIL\Image.py:2431)</text></g><g><title>_save (PIL\PngImagePlugin.py:1420) (1,030 samples, 47.95%)</title><rect x="51.9088%" y="244" width="47.9516%" height="15" fill="rgb(233,42,35)" fg:x="1115" fg:w="1030"/><text x="52.1588%" y="254.50">_save (PIL\PngImagePlugin.py:1420)</text></g><g><title>_save (PIL\ImageFile.py:522) (1,029 samples, 47.91%)</title><rect x="51.9553%" y="260" width="47.9050%" height="15" fill="rgb(231,13,6)" fg:x="1116" fg:w="1029"/><text x="52.2053%" y="270.50">_save (PIL\ImageFile.py:522)</text></g><g><title>_encode_tile (PIL\ImageFile.py:542) (7 samples, 0.33%)</title><rect x="99.5345%" y="276" width="0.3259%" height="15" fill="rgb(207,181,40)" fg:x="2138" fg:w="7"/><text x="99.7845%" y="286.50"></text></g><g><title>write (PIL\PngImagePlugin.py:1097) (7 samples, 0.33%)</title><rect x="99.5345%" y="292" width="0.3259%" height="15" fill="rgb(254,173,49)" fg:x="2138" fg:w="7"/><text x="99.7845%" y="302.50"></text></g><g><title>all (2,148 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(221,1,38)" fg:x="0" fg:w="2148"/><text x="0.2500%" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (3 samples, 0.14%)</title><rect x="99.8603%" y="68" width="0.1397%" height="15" fill="rgb(206,124,46)" fg:x="2145" fg:w="3"/><text x="100.1103%" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1149) (3 samples, 0.14%)</title><rect x="99.8603%" y="84" width="0.1397%" height="15" fill="rgb(249,21,11)" fg:x="2145" fg:w="3"/><text x="100.1103%" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.14%)</title><rect x="99.8603%" y="100" width="0.1397%" height="15" fill="rgb(222,201,40)" fg:x="2145" fg:w="3"/><text x="100.1103%" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap&gt;:982) (3 samples, 0.14%)</title><rect x="99.8603%" y="116" width="0.1397%" height="15" fill="rgb(235,61,29)" fg:x="2145" fg:w="3"/><text x="100.1103%" y="126.50"></text></g><g><title>&lt;module&gt; (&lt;frozen site&gt;:616) (3 samples, 0.14%)</title><rect x="99.8603%" y="132" width="0.1397%" height="15" fill="rgb(219,207,3)" fg:x="2145" fg:w="3"/><text x="100.1103%" y="142.50"></text></g><g><title>main (&lt;frozen site&gt;:603) (3 samples, 0.14%)</title><rect x="99.8603%" y="148" width="0.1397%" height="15" fill="rgb(222,56,46)" fg:x="2145" fg:w="3"/><text x="100.1103%" y="158.50"></text></g><g><title>addsitepackages (&lt;frozen site&gt;:384) (3 samples, 0.14%)</title><rect x="99.8603%" y="164" width="0.1397%" height="15" fill="rgb(239,76,54)" fg:x="2145" fg:w="3"/><text x="100.1103%" y="174.50"></text></g><g><title>addsitedir (&lt;frozen site&gt;:226) (3 samples, 0.14%)</title><rect x="99.8603%" y="180" width="0.1397%" height="15" fill="rgb(231,124,27)" fg:x="2145" fg:w="3"/><text x="100.1103%" y="190.50"></text></g><g><title>addpackage (&lt;frozen site&gt;:186) (3 samples, 0.14%)</title><rect x="99.8603%" y="196" width="0.1397%" height="15" fill="rgb(249,195,6)" fg:x="2145" fg:w="3"/><text x="100.1103%" y="206.50"></text></g><g><title>&lt;module&gt; (&lt;string&gt;:1) (3 samples, 0.14%)</title><rect x="99.8603%" y="212" width="0.1397%" height="15" fill="rgb(237,174,47)" fg:x="2145" fg:w="3"/><text x="100.1103%" y="222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1178) (3 samples, 0.14%)</title><rect x="99.8603%" y="228" width="0.1397%" height="15" fill="rgb(206,201,31)" fg:x="2145" fg:w="3"/><text x="100.1103%" y="238.50"></text></g></svg></svg>